#dev
version: '3'
services:
  postgres:
    build:
      dockerfile: Dockerfile.dev
      context: ./postgres
    ports:
      - '5432:5432'
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password
      POSTGRES_HOST: postgres
      POSTGRES_DB: postgres
      POSTGRES_PORT: 5432
      PORT: 5000
    command: ["postgres", "-c", "log_statement=all"]
  api:
    build:
      dockerfile: Dockerfile.dev
      context: ./api
    volumes:
      - /app/node_modules
      - ./api:/app
    ports:
      - '9229:9229'
      - '9230:9230'
  client:
    stdin_open: true
    tty: true
    build:
      dockerfile: Dockerfile.dev
      context: ./ssr/client
    volumes:
      - /app/node_modules
      - ./ssr/client:/app
    ports:
      - '4001:3000'
#  ssr:
#    build:
#      dockerfile: Dockerfile.dev
#      context: ssr
#    ports:
#      - '4001:4001'
  nginx:
    restart: always
    build:
      dockerfile: Dockerfile.dev
      context: ./nginx
    ports:
      - '3050:80'
      - '3053:443'

#prod
#version: '3'
#services:
#  postgres:
#    build:
#      dockerfile: Dockerfile.dev
#      context: ./postgres
#    ports:
#      - '5432:5432'
#    environment:
#      POSTGRES_USER: postgres
#      POSTGRES_PASSWORD: password
#  api:
#    build:
#      dockerfile: Dockerfile
#      context: ./api
#    volumes:
#      - /app/node_modules
#      - ./api:/app
#    ports:
#      - '9229:9229'
#      - '9230:9230'
#  client:
#    build:
#      dockerfile: Dockerfile
#      context: ./client
#    volumes:
#      - /app/node_modules
#      - ./client:/app
#  nginx:
#    restart: always
#    build:
#      dockerfile: Dockerfile.dev
#      context: ./nginx
#    ports:
#      - '3050:80'
#      - '3053:443'
