{"version":3,"sources":["reducer/auth.ts","reducer/location.ts","helpers/helpers.ts","reducer/games.ts","reducer/game.ts","reducer/game-chat.ts","reducer/loader.ts","reducer/index.ts","constants.ts","store/index.ts","middlewares/api.ts","libs/axios.ts","ac/auth.ts","components/header/login-widget/login-widget.tsx","components/header/login-widget/index.tsx","components/header/header.tsx","components/header/index.tsx","components/common/city-picker/set-city-item/set-city-item.tsx","components/common/city-picker/set-city-item/index.tsx","context/city-service-context/city-service-context.ts","HOCs/with-city-service.tsx","context/game-service-context/game-service-context.ts","HOCs/with-game-service.tsx","HOCs/authGuard.tsx","components/common/city-picker/city-picker.tsx","components/common/city-picker/index.tsx","components/common/messages/error-message/error-message.tsx","components/common/messages/error-message/index.tsx","components/common/date-time/date-time.tsx","components/common/date-time/index.tsx","ac/location.ts","ac/games.ts","ac/loader.ts","components/create-game/create-game.tsx","components/create-game/index.tsx","components/auth/forgot-password/forgot-password.tsx","components/auth/forgot-password/index.tsx","components/auth/login/oauth/google.tsx","components/auth/login/login.tsx","components/auth/login/index.tsx","components/game/game-info/game-info.tsx","components/game/game-info/index.tsx","components/game/teems-vs-flags/teems-vs-flags.tsx","components/game/teems-vs-flags/index.tsx","components/game/chat/chat-message/chat-message.tsx","components/game/chat/chat-message/index.tsx","components/game/chat/chat.tsx","components/game/chat/index.tsx","components/game/field-player/field-player.tsx","components/game/field-player/index.tsx","services/teems.ts","components/game/football-field/football-field.tsx","components/game/football-field/index.tsx","components/game/game.tsx","components/game/index.tsx","components/about/about.tsx","components/about/index.tsx","components/auth/registration/registration.tsx","components/auth/registration/index.tsx","components/auth/complete-registration/complete-registration.tsx","components/auth/complete-registration/index.tsx","components/account/account.tsx","components/account/index.tsx","components/games-list/game-item/game-item.tsx","components/games-list/game-item/index.tsx","components/common/input-barrette/input-barrette.tsx","components/common/input-barrette/index.tsx","components/common/set-city-widget/set-city-widget.tsx","components/common/set-city-widget/index.tsx","components/games-list/games-list.tsx","components/games-list/index.tsx","i18n.ts","components/locales/locales.tsx","components/locales/index.tsx","App.tsx","services/city.ts","services/game.ts","sockets.ts","index.tsx"],"names":["user","initialState","isAuthenticated","_","pickUser","Record","name","country","id","arrToMap","arr","DataRecord","Map","reduce","acc","item","set","OrderedMap","ReducerState","loading","entities","GameRecord","city","city_id","address","date","district","additional","players","activePlayers","defaultState","lat","long","active_players","fieldNumbersInGame","MessageRecord","text","username","loaded","combineReducers","auth","state","action","console","log","type","localStorage","setItem","JSON","stringify","location","payload","merge","games","gameState","LOAD_GAMES","data","update","sortBy","f","get","GAME_ADDED","gameId","updateIn","gameRecord","e","store","setIn","game","LOAD_GAME","info","event","joinGame","gameChat","gameChatState","messages","it","reverse","loader","createStore","reducer","composeWithDevTools","applyMiddleware","thunk","next","callApi","rest","axios","then","response","getState","error","defaults","baseURL","interceptors","use","status","dispatch","setCurrentUser","Promise","reject","LoginWidget","React","componentDidMount","window","hash","parse","Base64","decode","setCurUsr","this","props","render","logout","t","className","onClick","href","icon","faSignInAlt","Link","to","connect","a","post","removeItem","usr","withNamespaces","Header","mobileMenuShowed","toggleMenu","setState","hideMenu","bind","faBars","size","pathname","SetCityItem","doChoice","composeAddress","region","value","delimiter","CityServiceProvider","Provider","CityServiceConsumer","Consumer","withCityService","WrappedComponent","cityService","GameServiceProvider","GameServiceConsumer","withGameService","gameService","OriginalComponent","MixedComponent","checkAuth","history","push","componentDidUpdate","CityPicker","cities","handleChange","target","length","getCities","pickerDoChoice","autoComplete","placeholder","onChange","map","key","ErrorMessage","message","materialTheme","createMuiTheme","palette","primary","green","DateTimeComponent","handleDateChange","theme","locale","utils","MomentUtils","Grid","container","justify","disableToolbar","variant","margin","label","KeyboardButtonProps","ampm","cancelLabel","okLabel","setCity","loadGames","moment","errors","CreateGame","constructor","super","resetCity","validate","i","indexOf","changeDate","onSubmit","preventDefault","checkIfAllowedCreate","initCity","isEmpty","add","setMeta","document","title","alert","out","printFieldPlayersOptionList","setUser","ForgotPassword","email","backendErrors","submit","forgotPassword","Validator","isEmail","width","alt","src","Login","password","goToRegister","login","res","handleErrors","credentials","GameInfo","TeemsVsFlags","ChatMessage","Date","toISOString","slice","replace","Chat","maintainSocketMessages","socket","addChatMessage","loadChatHistory","on","sendMessage","keyCode","trim","initChat","getChatHistory","componentWillUnmount","destroyChat","getElementById","pick","onKeyUp","valueSeq","FieldPlayer","applyGame","index","catch","finally","teem","gameRedux","isActive","activeShirt","Teems","randomInt","min","max","Math","floor","random","tacticOrders","2","3","4","5","6","7","8","9","10","11","isNaN","Error","splitOnTeems","oddPlayers","evenPlayers","formGameOrder","teems","orders","forEach","order","Array","isArray","FootballField","gameOrder","nextProps","prevState","fieldClass","generateLines","lines","total","teemsOnField","row","rowNum","Game","params","match","loadGame","About","Registration","repeatPassword","registrationData","registration","htmlFor","resolve","err","CompleteRegistration","Account","confirmPassword","changePassword","toString","GameItem","click","dateToReadable","TableRow","TableCell","withRouter","InputBarrette","SetCityWidget","getItem","GamesList","filterDistrict","TableContainer","component","Paper","Table","aria-label","TableHead","align","TableBody","filter","includes","resources","ua","translation","i18n","reactI18nextModule","init","lng","keySeparator","interpolation","escapeValue","Locales","setLocale","changeLanguage","data-loc","App","checkIfLogged","CircularProgress","color","thickness","Route","path","exact","authGuard","CityService","patch","require","io","Manager","GameService","_gameSocket","format","split","emit","disconnect","playerNumber","gameSocket","generalSocket","playerJoined","ReactDOM","BrowserRouter"],"mappings":"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","file":"static/js/main.bdd0cd37.chunk.js","sourcesContent":["import {SET_CURRENT_USER} from '../constants'\nimport * as _ from 'lodash'\nimport { Base64 } from 'js-base64'\nlet user: {name: string, type?: string} | null\n\nuser = assignUser()\n\nconst initialState = {\n  user,\n  isAuthenticated: !_.isEmpty(user),\n}\n\nexport default (state = initialState, action: any) => {\n  console.log('initial state, auth', action)\n  switch (action.type) {\n    case SET_CURRENT_USER:\n      const {user} = action\n      localStorage.setItem('user', JSON.stringify(user))\n      return {\n        user: pickUser(user), isAuthenticated: !_.isEmpty(user)\n      }\n    default:\n      return state\n  }\n};\n\nfunction pickUser(user: any) {\n  return _.pick(user, ['name'])\n}\n\nfunction assignUser(): {name: string} | null {\n  return null;\n  // let user;\n  // if (window && window.location.hash) {\n  //   user = JSON.parse(Base64.decode(window.location.hash))\n  //   localStorage.setItem('user', JSON.stringify(user))\n  //   return user\n  // } else {\n  //   try {\n  //     user = JSON.parse(localStorage.user)\n  //   } catch (e) {\n  //     user = null\n  //   }\n  // }\n  // return user\n}\n","// @ts-nocheck\nimport {SET_CITY} from '../constants'\nimport {Record} from 'immutable'\n\nconst initialState = new Record({\n  name: '',\n  country: '',\n  id: null,\n})();\n\nexport default (state = initialState, action) => {\n  switch (action.type) {\n    case SET_CITY:\n      return action.payload ? state.merge(action.payload) : initialState\n    default:\n      return state\n  }\n};\n","import {OrderedMap, Map} from 'immutable';\n\n/**\n * @param {Array} arr\n * @param {function} DataRecord\n * @return {*}\n */\nexport function arrToMap(arr: any, DataRecord = Map) {\n  return arr.reduce(\n      // @ts-ignore\n      (acc: any, item: any) => acc.set(item.id, new DataRecord(item)),\n      // @ts-ignore\n      new OrderedMap({})\n  );\n}\n\n/**\n * @param {object} obj\n * @return {Array<T>}\n */\nexport function mapToArr(obj: any) {\n  return obj.valueSeq().toArray()\n}\n","/* eslint camelcase: 0 */\n// @ts-nocheck\nimport {\n  LOAD_GAMES,\n  SUCCESS,\n  GAME_ADDED,\n  START,\n  PLAYER_JOINED,\n} from '../constants';\nimport {OrderedMap, Record} from 'immutable';\nimport {arrToMap} from '../helpers/helpers';\n\nconst ReducerState = Record({\n  loading: false,\n  entities: new OrderedMap({}),\n});\n\nconst GameRecord = Record({\n  id: 0,\n  city: '',\n  city_id: 0,\n  address: '',\n  date: '',\n  district: null,\n  additional: '',\n  players: 0,\n  activePlayers: 1,\n});\n\nconst defaultState = new ReducerState();\n\nexport default (gameState = defaultState, action) => {\n  const {type, payload} = action;\n  switch (type) {\n    case LOAD_GAMES + SUCCESS:\n      if (!payload.data) {\n        return defaultState;\n      }\n      return gameState.update('entities', (entities) => {\n        return arrToMap(payload.data, GameRecord).sortBy(\n            (f) => f.get('date')\n        );\n      });\n    case GAME_ADDED + START:\n      return gameState.set('loading', true);\n    case PLAYER_JOINED:\n      console.log('player join in list', payload);\n      const {gameId, activePlayers} = payload;\n      return gameState.updateIn(['entities', gameId], (gameRecord) => {\n        try {\n          return gameRecord.set('activePlayers', activePlayers);\n        } catch (e) {\n          console.log('not connected to list yet');\n        }\n      });\n    case GAME_ADDED + SUCCESS:\n      const {id, city_id} = payload.data;\n      if (city_id !== payload.store.location.id) {\n        return gameState;\n      }\n      return gameState\n          .setIn(['entities', id], new GameRecord(payload.data))\n          .set('loading', false)\n          .update('entities', (entities) => {\n            return entities.sortBy((f) => f.get('date'));\n          });\n    default:\n      return gameState;\n  }\n};\n","import {Record} from 'immutable';\nimport {LOAD_GAME, SUCCESS, START, PLAYER_JOINED} from '../constants';\n\nconst GameRecord = Record({\n  id: null,\n  city: null,\n  address: null,\n  lat: null,\n  district: null,\n  long: null,\n  players: 0,\n  city_id: 0,\n  active_players: 1,\n  date: null,\n  additional: null,\n  loading: false,\n  fieldNumbersInGame: [],\n});\n\nconst defaultState = new GameRecord();\n\nexport default (gameState = defaultState, action: any) => {\n  const {type, payload} = action;\n  switch (type) {\n    case LOAD_GAME + START:\n      return gameState.set('loading', true)\n    case LOAD_GAME + SUCCESS:\n      return gameState.merge(payload.data).set('loading', false)\n    case PLAYER_JOINED:\n      const {gameId, activePlayers, info} = payload\n      if (gameState.get('id') === gameId) {\n        if (info.event === 'joined') {\n          return joinGame(gameState, info)\n        }\n        if (info.event === 'leaved') {\n          return leaveGame(gameState, info)\n        }\n        return gameState\n            .set('active_players', activePlayers)\n            .set('fieldNumbersInGame', info.fieldNumbersInGame)\n      }\n      return gameState;\n    default:\n      return gameState;\n  }\n};\n\n/**\n * @param {object} gameState\n * @param {number} playerFieldNumber\n * @return {object}\n */\nfunction leaveGame(gameState: any, {fieldNumbersInGame}: any) {\n  return gameState.set('fieldNumbersInGame', fieldNumbersInGame);\n}\n/**\n * @param {object} gameState\n * @param {number} playerFieldNumber\n * @return {*}\n */\nfunction joinGame(gameState: any, {fieldNumbersInGame}: any) {\n  return gameState.set('fieldNumbersInGame', fieldNumbersInGame)\n}\n","// @ts-nocheck\nimport {OrderedMap, Record} from 'immutable';\nimport {GAME_CHAT_MESSAGE_ADDED, GAME_CHAT_MESSAGE_HISTORY} from '../constants';\nimport {arrToMap} from '../helpers/helpers';\n\nconst ReducerState = Record({\n  loading: false,\n  entities: new OrderedMap({}),\n});\n\nconst MessageRecord = Record({\n  id: null,\n  text: null,\n  username: null,\n  date: null,\n});\n\nconst defaultState = new ReducerState();\n\nexport default (gameChatState = defaultState, action) => {\n  const {type, payload} = action;\n  switch (type) {\n    case GAME_CHAT_MESSAGE_HISTORY:\n      return gameChatState.update('entities', (entities) => {\n        return arrToMap(payload, MessageRecord);\n      });\n    case GAME_CHAT_MESSAGE_ADDED:\n      const messages = gameChatState.setIn(\n          ['entities', payload.id],\n          new MessageRecord(payload));\n      return messages.update('entities', (entities)=> {\n        return messages.entities.sortBy((it)=>it.get('date')).reverse();\n      });\n    default:\n      return gameChatState;\n  }\n};\n\n","// @ts-nocheck\nimport {LOADING, LOADED} from '../constants'\nimport {Record} from 'immutable'\n\nconst initialState = new Record({\n    loading: false,\n    loaded: false\n})();\n\nexport default (state = initialState, action) => {\n    console.log('TYPE ----', action.type)\n    switch (action.type) {\n        case LOADING:\n            console.log('loading !!!!')\n            return state.set('loading', true).set('loaded', false)\n        case LOADED:\n            return state.set('loading', false).set('loaded', true)\n        default:\n            return state\n    }\n};\n","import {combineReducers} from 'redux';\nimport auth from './auth';\nimport location from './location';\nimport games from './games';\nimport game from './game';\nimport gameChat from './game-chat';\nimport loader from './loader'\nexport default combineReducers({\n  auth, location, games, game, gameChat, loader\n});\n","export const START = '_START'\nexport const SUCCESS = '_SUCCESS'\nexport const FAIL = '_FAIL'\n\nexport const SET_CURRENT_USER = 'SET_CURRENT_USER'\nexport const SET_CITY = 'SET_CITY'\nexport const NOTIFY_CUSTOMER='NOTIFY_CUSTOMER'\nexport const WARN_USER='WARN_USER'\n\nexport const LOAD_GAMES = 'LOAD_GAMES'\nexport const LOAD_GAME = 'LOAD_GAME'\nexport const GAME_ADDED = 'GAME_ADDED'\nexport const PLAYER_JOINED = 'PLAYER_JOINED'\nexport const PLAYER_LEAVE = 'PLAYER_LEAVE'\n\nexport const GAME_CHAT_MESSAGE_ADDED = 'GAME_CHAT_MESSAGE_ADDED'\nexport const GAME_CHAT_MESSAGE_HISTORY = 'GAME_CHAT_MESSAGE_HISTORY'\n\nexport const LOADING = 'LOADING'\nexport const LOADED = 'LOADED'\n","import {createStore, applyMiddleware} from 'redux';\nimport thunk from 'redux-thunk';\nimport reducer from '../reducer';\nimport {composeWithDevTools} from 'redux-devtools-extension';\nimport api from '../middlewares/api';\n\nconst store = createStore(\n    reducer,\n    composeWithDevTools(applyMiddleware(thunk, api))\n);\nexport default store;\n","import {START, SUCCESS, FAIL} from '../constants'\nimport axios from '../libs/axios'\n\nexport default (store: any) => (next: any) => (action: any) => {\n  const {callApi, type, ...rest} = action\n  if (!callApi) return next(action)\n\n  next({\n    ...rest,\n    type: type + START,\n  });\n  return axios.get(callApi).then(\n      (response) => {\n        next({...rest, type: type + SUCCESS, payload:\n            {...response, store: store.getState()}})\n      },\n      (error) => {\n        next({...rest, type: type + FAIL, error})\n      }\n  );\n};\n","import axios from 'axios'\nimport {setCurrentUser} from '../ac/auth'\nimport store from '../store'\naxios.defaults.baseURL = '/api'\naxios.interceptors.response.use((response) => {\n    return response\n}, (error) => {\n    if (error.response.status === 403) {\n        store.dispatch(setCurrentUser({}))\n    }\n    return Promise.reject(error)\n})\nexport default axios\n","import {SET_CURRENT_USER} from '../constants'\nimport axios from '../libs/axios'\n\nexport function setCurrentUser(user: any) {\n  return {\n    type: SET_CURRENT_USER,\n    user,\n  }\n}\nexport function checkIfLogged() {\n  return async (dispatch: any) => {\n    let response;\n    try {\n      response = await axios.get(`/auth/ping`);\n    } catch (e) {\n      if (e.message.indexOf('code 401') !== -1) {\n        dispatch(setCurrentUser(null))\n      }\n      response = e.message\n    }\n    return response\n  }\n}\nexport function setCurUsr(usr:any) {\n  return (dispatch: any) => {\n    console.log('usr', usr)\n    dispatch(setCurrentUser(usr))\n  }\n}\nexport function login(credentials: any): any {\n  return async (dispatch: any) => {\n    try {\n      const response = await axios.post(`/auth/login`, credentials)\n      dispatch(setCurrentUser(response.data))\n      return {...response.data, status: response.status}\n    } catch (e) {\n      return e.response\n    }\n  }\n}\n\nexport function forgotPassword(email: string) {\n  return async (dispatch: any) => {\n    try{\n      const response = await axios.post(`/auth/forgot-password`, {email})\n      return {...response.data, status: response.status}\n    } catch (e) {\n      return e.response\n    }\n  }\n}\n\nexport function changePassword(password: string) {\n  return async (dispatch: any) => {\n    try {\n      const response = await axios.post(`/auth/change-password`, {password})\n      return {...response.data, status: response.status}\n    } catch (e) {\n      return e.response\n    }\n  }\n}\nexport function registration(user: any) {\n  return (dispatch: any) => {\n    return new Promise((resolve, reject)=> {\n      axios\n          .post(`/auth/registration`, user)\n          .then((res) => {\n            resolve(res)\n          })\n          .catch((err) => {\n            console.log(err.response.data)\n            dispatch(setCurrentUser({}))\n            reject(err.response)\n          });\n    });\n  };\n}\n\nexport function logout() {\n  return async (dispatch: any) => {\n    await axios.post(`/auth/logout`, {})\n    localStorage.removeItem('user')\n    dispatch(setCurrentUser({}))\n  };\n}\n\nexport function setUser(user: any) {\n  console.log(`set user`)\n  return (dispatch: any) => {\n    dispatch(setCurrentUser(user))\n  };\n}\n","import * as React from 'react'\nimport './login-widget.scss'\nimport {Link} from 'react-router-dom'\nimport {connect} from 'react-redux'\nimport {logout, setCurUsr} from '../../../ac/auth'\nimport Locales from \"../../locales\"\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\nimport {faUser, faSignInAlt} from \"@fortawesome/free-solid-svg-icons\";\nimport {withNamespaces} from \"react-i18next\";\ninterface Props {\n    auth: any,\n    logout: any,\n    t: any,\n    setCurUsr: any\n}\n\nclass LoginWidget extends React.Component<Props> {\n\n    componentDidMount(): void {\n        console.log('componentDidMount LOGIN WIDGET')\n        let user;\n        if (window && window.location.hash) {\n            user = JSON.parse(Base64.decode(window.location.hash))\n            localStorage.setItem('user', JSON.stringify(user))\n            return user\n        } else {\n            try {\n                user = JSON.parse(localStorage.user)\n            } catch (e) {\n                user = null\n            }\n        }\n        const {setCurUsr} = this.props;\n        console.log(user)\n        setCurUsr(user);\n        return;\n    }\n\n    render() {\n    const {auth, logout, t} = this.props\n\n    return (\n      <div className=\"absolute-login-widget\">\n          <div>\n              {auth.isAuthenticated ? auth.user.name: ''}\n              {/*<FontAwesomeIcon icon={faUser} className='user-icon'/>*/}\n              { auth.isAuthenticated ? <a onClick={logout} href='#' className='sign-out'>\n                  <FontAwesomeIcon icon={faSignInAlt}/>\n              </a> :\n              <Link to=\"/login\" className='sign-out'>\n                  {t('Авторизация')} <FontAwesomeIcon icon={faSignInAlt}/>\n              </Link>}\n          </div>\n      </div>\n    );\n\n    // return auth.isAuthenticated ? (\n    //   <div className=\"absolute-login-widget\">\n    //       <div>\n    //           {auth.user.name}\n    //       </div>\n    //       <FontAwesomeIcon icon={faUser}/>\n    //       <Link to=\"/logout\">\n    //           <FontAwesomeIcon icon={faSignInAlt}/>\n    //       </Link>\n    //       <i onClick={logout} className=\"fas fa-sign-out-alt\"/>\n    //   </div>\n    // ) : (\n    //   <div className=\"absolute-login-widget\">\n    //     <div>\n    //         <FontAwesomeIcon icon={faUser}/>\n    //         <Link to=\"/login\">\n    //             <FontAwesomeIcon icon={faSignInAlt}/>\n    //         </Link>\n    //     </div>\n    //   </div>\n    // )\n  }\n}\n\n\nexport default connect((state: any) => {\n  return {\n    auth: state.auth,\n  };\n    // @ts-ignore\n}, {logout, setCurUsr})(withNamespaces()(LoginWidget))\n","import LoginWidget from './login-widget';\nexport default LoginWidget;\n","import * as React from 'react';\nimport LoginWidget from './login-widget';\nimport {Link} from 'react-router-dom';\nimport './header.scss';\nimport {withNamespaces} from \"react-i18next\";\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faBars } from '@fortawesome/free-solid-svg-icons'\nimport { faGlobe } from '@fortawesome/free-solid-svg-icons'\ninterface Props {\n  t:any\n}\nclass Header extends React.Component<Props> {\n  componentDidMount(): void {\n    console.log(\"HEADER MOUNT\")\n  }\n\n  state = {mobileMenuShowed: false}\n  toggleMenu() {\n    this.setState({mobileMenuShowed: !this.state.mobileMenuShowed})\n  }\n  hideMenu() {\n    this.setState({mobileMenuShowed: false})\n  }\n  /**\n   * Render app general header\n   * @return {string} - HTML markup for the component\n   */\n  render() {\n    const {t} = this.props\n    return (\n      <nav className=\"main-menu\">\n        <div className=\"container\">\n          <div className='mobile-only'>\n             <div className='mobile-menu'>\n              <FontAwesomeIcon onClick={this.toggleMenu.bind(this)} icon={faBars} size='2x'/>\n               {this.state.mobileMenuShowed && <div className='mobile-menu-items'>\n                <ul className='shadow-2'>\n                  <li onClick={this.hideMenu.bind(this)}><Link to=\"/\"\n                  >{t('Главная')}</Link></li>\n                  <li onClick={this.hideMenu.bind(this)}><Link to=\"/about\"\n                  >{t('О сервисе')}</Link></li>\n                  <li onClick={this.hideMenu.bind(this)}><Link to=\"/create-game\"\n                  >{t('Создать игру')}</Link></li>\n                </ul>\n              </div>}\n            </div>\n          </div>\n          <ul id=\"main-menu-ul\" className='desktop-only'>\n            <li className={\n              window.location.pathname === '/' ? 'active' : ''\n            }>\n              <Link to=\"/\">{t('Главная')}</Link>\n            </li>\n            <li onClick={this.hideMenu.bind(this)} className={window.location.pathname === '/about' ? 'active' : ''}>\n              <Link to=\"/about\"\n            >{t('О сервисе')}</Link></li>\n            <li className={window.location.pathname === '/create-game' ? 'active' : ''}>\n              <Link to=\"/create-game\"\n                    >{t('Создать игру')}</Link></li>\n          </ul>\n          <LoginWidget/>\n        </div>\n      </nav>\n    );\n  }\n}\n\n// @ts-ignore\nexport default withNamespaces()(Header);\n","import Header from './header';\nexport default Header;\n","import * as React from 'react'\nimport './set-city-item.scss'\nimport {connect} from 'react-redux'\n\ninterface Props {\n  name?: string,\n  country?: string,\n  region?: string,\n  doChoice: any,\n  id: number,\n}\n\n/**\n * Item for autocomplete list\n */\nclass SetCityItem extends React.Component<Props> {\n  /**\n   * @return {string} html\n   */\n  render() {\n    const {name, country, id, doChoice} = this.props;\n    return (\n      <div className=\"city-item\" onClick={\n        () => {\n          doChoice({name: name, country: country, id: id})\n        }}>\n        { this.composeAddress(this.props.name) }\n        <small>{ this.composeAddress(this.props.region, ', ') }</small>\n        <small>{ this.composeAddress(this.props.country, ', ') }</small>\n      </div>\n    )\n  }\n\n  /**\n   * @param {string} value\n   * @param {string} delimiter\n   * @return {*}\n   */\n  composeAddress(value: any, delimiter = '') {\n    if (!value) return ''\n    return <span>{delimiter + value}</span>\n  }\n}\n\nexport default connect(\n    (state: {location: any}) => {\n      return {\n        location: state.location,\n      }\n    }, null\n)(SetCityItem)\n","import SetCityItem from './set-city-item';\nexport default SetCityItem;\n","import * as React from 'react'\n\nconst {\n  Provider: CityServiceProvider,\n  Consumer: CityServiceConsumer,\n} = React.createContext(null)\n\nexport {CityServiceConsumer, CityServiceProvider}\n","import * as React from 'react'\nimport {CityServiceConsumer} from '../context/city-service-context'\n\nconst withCityService = (WrappedComponent: any) => {\n  return function WithCityService(props: any) {\n    return (\n      <CityServiceConsumer>\n        {(cityService) => {\n          return <WrappedComponent {...props} cityService={cityService} />\n        }}\n      </CityServiceConsumer>\n    )\n  }\n}\nexport default withCityService\n","import * as React from 'react';\n\nconst {\n  Provider: GameServiceProvider,\n  Consumer: GameServiceConsumer,\n} = React.createContext(null);\n\nexport {GameServiceProvider, GameServiceConsumer};\n","import * as React from 'react'\nimport {GameServiceConsumer} from '../context/game-service-context'\n\nconst withGameService = (WrappedComponent: any) => {\n  return function WithGameService(props: any) {\n    return (\n      <GameServiceConsumer>\n        {(gameService) => {\n          return <WrappedComponent {...props} gameService={gameService} />\n        }}\n      </GameServiceConsumer>\n    )\n  }\n}\nexport default withGameService\n","import * as React from 'react';\nimport { connect } from 'react-redux';\ninterface Props {\n  isAuthenticated: any,\n  history: any,\n}\nexport default (OriginalComponent:any) => {\n  class MixedComponent extends React.Component<Props> {\n\n    checkAuth() {\n      if (!this.props.isAuthenticated) {\n        this.props.history.push('/');\n      }\n    }\n\n    componentDidMount() {\n      this.checkAuth();\n    }\n\n    componentDidUpdate() {\n      this.checkAuth();\n    }\n\n    render() {\n      return <OriginalComponent {...this.props} />;\n    }\n  }\n\n  function mapStateToProps(state: {auth: Props}) {\n    return {\n      isAuthenticated: state.auth.isAuthenticated,\n    }\n  }\n\n  return connect(mapStateToProps)(MixedComponent);\n};\n\n\n","import * as React from 'react'\nimport SetCityItem from './set-city-item'\nimport './city-picker.scss'\nimport {withCityService} from '../../../HOCs'\ninterface Props {\n  doChoice: any;\n  city: string;\n  cityService: any;\n}\n\n/**\n * Input which select city\n */\nclass CityPicker extends React.Component<Props> {\n  state = {\n    cities: [],\n    city: '',\n    loading: null,\n  };\n\n  handleChange = async (event: any) => {\n    const city = event.target.value;\n    this.setState({city});\n    const {cityService} = this.props;\n    if (city.length > 2) {\n      this.setState({loading: true});\n      const cities = await cityService.getCities(city);\n      console.log(cities)\n      this.setState({loading: false});\n      this.setState({cities});\n    }\n  }\n\n  pickerDoChoice = (city: any) => {\n    this.setState({cities: [],city: city.name})\n    return this.props.doChoice(city);\n  };\n\n  render() {\n    return (\n      <div className=\"city-auto-complete\">\n        <input\n          type=\"text\"\n          className=\"form-control\"\n          autoComplete=\"off\"\n          placeholder=\"Город\"\n          onChange={this.handleChange}\n        />\n        {this.state.loading && <div className=\"lds-hourglass\"/>}\n        {this.state.cities.length ? (\n          <div className=\"list\">\n            {this.state.cities.map((city: {id: number}) => {\n              return (\n                <SetCityItem\n                  key={city.id}\n                  {...city}\n                  doChoice={this.pickerDoChoice}\n                />\n              )\n            })}\n          </div>\n        ) : null}\n      </div>\n    )\n  }\n}\n\nexport default withCityService(CityPicker)\n","import CityPicker from './city-picker';\nexport default CityPicker;\n","import * as React from 'react'\nimport './error-message.scss'\n\nfunction ErrorMessage(props: any) {\n  return props.message ? (\n      <div className=\"common-error-message\">{props.message}</div>\n  ) : null\n}\nexport default ErrorMessage\n","import ErrorMessage from './error-message';\nexport default ErrorMessage;\n","import * as React from 'react'\nimport 'date-fns';\n\nimport Grid from '@material-ui/core/Grid';\nimport './customDatePickerWidth.scss'\nimport {\n  MuiPickersUtilsProvider,\n  KeyboardTimePicker,\n  KeyboardDatePicker,\n} from '@material-ui/pickers'\nimport MomentUtils from \"@date-io/moment\";\nimport \"moment/locale/ru\"\nimport './date-time.scss'\nimport green from '@material-ui/core/colors/green'\nimport {MuiThemeProvider, createMuiTheme} from '@material-ui/core'\nimport {withNamespaces} from \"react-i18next\";\ninterface Props {\n  onChange: any,\n  value: any,\n  t: any\n}\nconst materialTheme = createMuiTheme({\n    palette: {\n        primary: green\n    },\n});\n\nclass DateTimeComponent extends React.Component<Props> {\n  handleDateChange = (e: any) => {\n    const {onChange}: any = this.props\n    onChange(e)\n  }\n\n  render() {\n    const {t} = this.props\n    return (\n        <div className=\"date\">\n            <MuiThemeProvider theme={materialTheme}>\n                <MuiPickersUtilsProvider locale=\"ru\" utils={MomentUtils}>\n                    <Grid container justify=\"space-around\">\n                        <div className={'customDatePickerWidth'}>\n                        <KeyboardDatePicker\n                            disableToolbar\n                            variant=\"inline\"\n                            margin=\"normal\"\n                            id=\"date-picker-inline\"\n                            label={t('Дата')}\n                            value={this.props.value}\n                            onChange={this.handleDateChange}\n                            KeyboardButtonProps={{\n                                'aria-label': 'change date',\n                            }}\n                        />\n                        </div>\n                        <div className={'customDatePickerWidth'}>\n                        <KeyboardTimePicker\n                            disableToolbar\n                            margin=\"normal\"\n                            id=\"time-picker\"\n                            label={t('Время')}\n                            ampm={false}\n                            cancelLabel=\"Отмена\"\n                            okLabel=\"Подтвердить\"\n                            value={this.props.value}\n                            onChange={this.handleDateChange}\n                            KeyboardButtonProps={{\n                                'aria-label': 'change time',\n                            }}\n                        />\n                        </div>\n                    </Grid>\n                </MuiPickersUtilsProvider>\n            </MuiThemeProvider>\n        </div>\n    )\n  }\n}\n\n\n// @ts-ignore\nexport default withNamespaces()(DateTimeComponent)\n","import DateTimeComponent from './date-time';\nexport default DateTimeComponent;\n","import {LOAD_GAMES, SET_CITY, SUCCESS} from '../constants';\nimport {loadGames} from './games';\n/**\n * Set city action\n * @return {{payload: *, type: string}}\n */\nexport function setCity(city: any) {\n  if (!city) {\n    return (dispatch: any) => {\n      localStorage.setItem('location', '')\n      dispatch({type: LOAD_GAMES+SUCCESS, payload: {data: null}})\n      dispatch({\n        type: SET_CITY,\n        payload: city,\n      })\n    }\n  }\n  return (dispatch: any) => {\n    localStorage.setItem('location', JSON.stringify(city))\n    dispatch(loadGames(city))\n    dispatch({type: SET_CITY, payload: city})\n  }\n}\n","import {LOAD_GAMES, GAME_ADDED, LOAD_GAME, PLAYER_JOINED, GAME_CHAT_MESSAGE_HISTORY, GAME_CHAT_MESSAGE_ADDED} from '../constants'\nimport {ICallApiAc, ICommonAc} from './IAc'\n\n\nexport function loadGames(city: any): ICallApiAc {\n  return {\n    type: LOAD_GAMES,\n    callApi: `/game/city/${city.id}`,\n  };\n}\n\nexport function loadGame(id: number): ICallApiAc {\n  return {\n    type: LOAD_GAME,\n    callApi: `/game/${id}`,\n  };\n}\n\nexport function gameAdded(id: number): ICallApiAc {\n  return {\n    type: GAME_ADDED,\n    callApi: `/game/${id}`,\n  };\n}\n\nexport function playerJoined(\n    gameId: number,\n    activePlayers: number,\n    info: any): ICommonAc {\n  return {\n    type: PLAYER_JOINED,\n    payload: {gameId, activePlayers, info},\n  };\n}\n\nexport function addChatMessage(message: any) {\n  return {\n    type: GAME_CHAT_MESSAGE_ADDED,\n    payload: message,\n  };\n}\n\nexport function loadChatHistory(messages: any) {\n  return {\n    type: GAME_CHAT_MESSAGE_HISTORY,\n    payload: messages,\n  };\n}\n","import {LOADING, LOADED} from \"../constants\";\n\nexport function loading() {\n    console.log('ac loading')\n    return {\n        type: LOADING,\n    }\n}\nexport function loaded() {\n    console.log('ac loaded')\n    return {\n        type: LOADED,\n    }\n}\n","import * as React from 'react'\nimport './create-game.scss'\nimport CityPicker from '../../components/common/city-picker'\nimport ErrorMessage from '../../components/common/messages/error-message'\nimport _ from 'lodash'\nimport {withGameService} from '../../HOCs'\nimport GamesList from '../games-list'\nimport {connect} from 'react-redux'\nimport DateTimeComponent from '../../components/common/date-time'\nimport SetCityWidget from '../../components/common/set-city-widget'\nimport {setCity} from '../../ac/location'\nimport {setUser} from '../../ac/auth'\nimport * as moment from 'moment'\nimport {loading, loaded} from \"../../ac/loader\";\nimport {JSX} from \"@babel/types\";\nimport {withNamespaces} from \"react-i18next\";\nimport { Redirect } from 'react-router-dom'\n\nmoment.locale('ru')\n\nconst initialState = {\n  data: {\n    city: '',\n    city_id: '',\n    address: '',\n    additional: '',\n    players: 6,\n    date: moment.now(), // (new Date().setHours(new Date().getHours() + 4)),\n    district: '',\n  },\n  errors: {},\n}\n\ninterface Props {\n  gameService: any,\n  auth: any,\n  location: any,\n  setCity: any,\n  setUser: any,\n  match: any,\n  history: any,\n  loading:any,\n  loaded: any,\n  t: any\n}\n\nclass CreateGame extends React.Component<Props> {\n  state: {data: any, errors: any}\n\n  constructor(props: any) {\n    super(props)\n    CreateGame.setMeta()\n    this.state = initialState\n  }\n  static setMeta() {\n    document.title = 'Football for everyone'\n  }\n\n  setCity = (city: {name: string, id: number, country: string}) => {\n    this.setState({\n      data: {...this.state.data, city: city.name, city_id: city.id},\n    })\n  }\n\n  resetCity = () => {\n    this.setState({data: {...this.state.data, city: ''}})\n  }\n\n  onChange = (e: any):any => {\n    this.setState({\n      data: {...this.state.data, [e.target.name]: e.target.value},\n    });\n  };\n\n  validate = (data: any) => {\n    const errors:any = {}\n    for (const i in data) {\n      if (['players', 'lat', 'long', 'additional'].indexOf(i) !== -1) {\n        continue;\n      }\n      if (!data[i]) errors[i] = `Не может быть пустым`;\n    }\n    return errors\n  };\n\n  changeDate = (e: any) => {\n    this.setState({\n      data: {\n        ...this.state.data,\n        date: e,\n      },\n    });\n  };\n\n  checkIfAllowedCreate() {\n    const {auth, t} = this.props\n    if (!auth.isAuthenticated) {\n      alert(t('Зарегистрируйтесь чтобы создать игру'))\n    }\n    return auth.isAuthenticated;\n  }\n\n  initCity(data: {city: string, city_id: number}) {\n    const {setCity} = this.props\n    setCity({name: data.city, id: data.city_id});\n  }\n\n  static printFieldPlayersOptionList(): JSX.Element[] {\n    const out = [];\n    for(let i = 6; i<23; i++) { out.push(i) }\n    return out.map((it:number) => <option key={it}>{it}</option>)\n  }\n\n  onSubmit = async (e: any) => {\n    e.preventDefault()\n\n    const {data} = this.state;\n    if (!this.checkIfAllowedCreate()) {\n      return\n    }\n    this.initCity(data)\n    const errors = this.validate(data);\n    this.setState({\n      errors,\n    });\n    if (_.isEmpty(errors)) {\n      const {gameService, loading, loaded} = this.props;\n      try {\n        loading()\n        const res = await gameService.add(data)\n        if (res.status === 201) {\n          this.setState(initialState)\n          console.log('red')\n          this.props.history.push(`/`)\n        }\n      } finally {\n        loaded()\n      }\n    }\n  };\n\n  render() {\n\n    const {data, errors} = this.state\n    const {t} = this.props\n    return (\n      <div className=\"row main-content\">\n        <div className=\"left-col create-game-left-col\">\n          <form className={'game-form' } onSubmit={this.onSubmit}>\n            <fieldset>\n              <legend>{t('Создать игру')}</legend>\n              <div className=\"form-group\" id=\"gameCitySection\">\n                <label>{t('Город')}</label>\n                {!this.state.data.city &&\n                <CityPicker\n                  doChoice={this.setCity}\n                  city={this.state.data.city}\n                />}\n                {\n                  this.state.data.city &&\n                  <div className={'success-panel'}>{this.state.data.city}\n                    <span onClick={this.resetCity}>✕</span>\n                  </div>\n                }\n                {errors.city && <ErrorMessage message={errors.city} />}\n              </div>\n              <div className=\"form-group\">\n                <label>{t('Район')}</label>\n                <input\n                  type=\"text\"\n                  className=\"form-control\"\n                  name=\"district\"\n                  value={data.district}\n                  onChange={this.onChange}\n                />\n                {errors.district && <ErrorMessage message={errors.district} />}\n              </div>\n              <div className=\"form-group\">\n                <label>{t('Адрес')}</label>\n                <input\n                  type=\"text\"\n                  className=\"form-control\"\n                  name=\"address\"\n                  value={data.address}\n                  onChange={this.onChange}\n                />\n                {errors.address && <ErrorMessage message={errors.address} />}\n              </div>\n              <div className=\"form-group date\">\n                <DateTimeComponent\n                  // @ts-ignore\n                  onChange={this.changeDate}\n                  value={data.date}/>\n                {errors.date && <ErrorMessage message={errors.date} />}\n              </div>\n              <div className=\"form-group\">\n                <label>{t('Количество игроков')}</label>\n                <select\n                  className=\"form-control col-2\"\n                  onChange={this.onChange}\n                  value={data.players}\n                  name=\"players\"\n                >\n                  {CreateGame.printFieldPlayersOptionList()}\n                </select>\n                {errors.players && <ErrorMessage message={errors.players} />}\n              </div>\n            </fieldset>\n            <div className=\"form-group\">\n              <label>{t('Дополнительно')}</label>\n              <textarea\n                className=\"form-control\"\n                name=\"additional\"\n                value={data.additional}\n                onChange={this.onChange}\n              />\n              {errors.additional && (\n                <ErrorMessage message={errors.additional} />\n              )}\n            </div>\n            <div className=\"form-group\">\n              <button type=\"submit\" className=\"btn submit-btn shadow-0\">\n                {t('Создать')}\n              </button>\n            </div>\n          </form>\n        </div>\n      </div>\n    )\n  }\n}\n\n\nexport default connect(\n    (state: {location: any, game: any, auth: any}) => {\n      return {\n        location: state.location,\n        games: state.game,\n        auth: state.auth,\n      };\n    },\n    {setCity, setUser, loading, loaded}\n    // @ts-ignore\n)(withGameService(withNamespaces()(CreateGame)))\n","import CreateGame from './create-game'\nexport default CreateGame\n","import * as React from 'react'\nimport './forgot-password.scss'\nimport {connect} from 'react-redux'\nimport {forgotPassword} from '../../../ac/auth'\nimport Validator from 'validator'\nimport ErrorMessage from '../../../components/common/messages/error-message'\nimport _ from 'lodash'\n\nclass ForgotPassword extends React.Component<any> {\n    state = {\n        data: {\n            email: ''\n        },\n        loading: false,\n        backendErrors: [],\n        errors: {email: null},\n    }\n\n    onChange = (e: any) => {\n        this.setState({data: {...this.state.data, [e.target.name]: e.target.value}})\n    }\n    static validate(data: any) {\n        const errors = {email: ''}\n        if(data.email && !Validator.isEmail(data.email)) errors.email = 'Не валидный емейл'\n        if(!data.email) errors.email = 'Не может быть пустым'\n        return errors\n    }\n    submit = async (e: any) => {\n        const {forgotPassword} = this.props\n        e.preventDefault()\n        const errors = ForgotPassword.validate(this.state.data)\n        if(!_.isEmpty(errors.email)) {\n            this.setState({errors})\n            return\n        }\n        await forgotPassword(this.state.data.email)\n        window.location.href = '/'\n\n    }\n    render() {\n        const {email} = this.state.data\n        return(\n            <div>\n                <form className=\"col-12 col-md-6 col-lg-6 col-xl-6 login-form\" onSubmit={this.submit}>\n                    <div className=\"form-group\">\n                        {this.state.errors.email && (\n                            <ErrorMessage message={this.state.errors.email} />\n                        )}\n                        <label>Email</label>\n                        <input value={email} name={'email'} onChange={this.onChange} className=\"form-control\" type=\"text\"/>\n                    </div>\n                    <p>\n                        <button type=\"submit\" className=\"btn submit-btn mb-2\">Войти</button>\n                    </p>\n                </form>\n            </div>\n        )\n    }\n}\n\nexport default connect(null, {forgotPassword})(ForgotPassword)\n","import ForgotPassword from './forgot-password'\nexport default ForgotPassword\n","import './style.scss';\nimport * as React from 'react';\nimport {withNamespaces} from \"react-i18next\";\nconst link = `/api/auth/google`;\n\nfunction SingInGoogle({t}:any) {\n    return (\n        <a href={link}><div className='loginWithGoogle'>\n            <img width=\"20px\" alt=\"Google sign-in\"\n                                src=\"/img/Google__G__Logo.svg.webp\"/>{t('Войти')} {t('с')} google\n        </div></a>\n        )\n}\n\n// @ts-ignore\nexport default withNamespaces()(SingInGoogle);\n","import * as React from 'react'\nimport './login.scss'\nimport Validator from 'validator'\nimport ErrorMessage from '../../../components/common/messages/error-message'\nimport {connect} from 'react-redux'\nimport {login} from '../../../ac/auth'\nimport {Link} from 'react-router-dom'\nimport {loaded, loading} from \"../../../ac/loader\";\nimport SingInGoogle from './oauth/google'\nimport {withNamespaces} from \"react-i18next\";\ninterface Props {history: any, login: any, loading: any, loaded: any, t: any}\n\nclass Login extends React.Component<Props> {\n\n  state = {\n    data: {email: '', password: ''},\n    loading: false,\n    backendErrors: [],\n    errors: {email: null, password: null},\n  }\n\n  goToRegister = (e: any) => {\n    e.preventDefault()\n    window.location.href = '/registration'\n  }\n\n  onChange = (e: any) => {\n    this.setState({data: {...this.state.data, [e.target.name]: e.target.value}})\n  }\n\n  handleErrors(status: number){\n    if(status < 300) {\n      this.props.history.push('/')\n      return\n    } else {\n      switch (status) {\n        case 401:\n          this.setState({backendErrors: ['Подтвердите ваш почтовый адресс']})\n          break\n        case 403:\n          this.setState({backendErrors: ['Неверный логин или пароль']})\n          break\n        default:\n          this.setState({backendErrors: ['Произошла серверная ощибка, обратитесь к администратору']})\n      }\n    }\n  }\n\n  submit = async (e: any) => {\n    const {login, loading, loaded} = this.props\n    const {data} = this.state\n    e.preventDefault()\n    const errors = this.validate(data)\n    this.setState({errors})\n    if (!errors.email && !errors.password) {\n      try {\n        loading()\n        const res = await login(data)\n        this.handleErrors(res.status)\n      } finally {\n        loaded()\n      }\n    }\n  }\n\n  validate = (data: any) => {\n    const errors: {password: any, email: any} = {password: null, email: null}\n    if (!data.password) errors.password = `Не может быть пустым`\n    if (!data.email) errors.email = `Не может быть пустым`\n    if (!Validator.isEmail(data.email)) errors.email = `Не валидный емейл`\n    return errors\n  }\n\n  render() {\n    const {t} = this.props\n    const {data} = this.state;\n    return (\n      <div>\n        <form className=\"col-md-6 login-form\" onSubmit={this.submit}>\n          {\n            this.state.backendErrors.map((it) =>\n              <ErrorMessage key={it} message={it}/>)}\n          <div className=\"form-group\">\n            <label>E-mail {t('адрес')}</label>\n            <input\n              type=\"email\"\n              id=\"email\"\n              name=\"email\"\n              placeholder=\"example@gmail.com\"\n              value={data.email}\n              onChange={this.onChange}\n              className=\"form-control\"\n            />\n            {this.state.errors.email && (\n              <ErrorMessage message={this.state.errors.email} />\n            )}\n          </div>\n          <div className=\"form-group\">\n            <label>Пароль</label>\n            <input\n              type=\"password\"\n              id=\"password\"\n              name=\"password\"\n              value={data.password}\n              onChange={this.onChange}\n              className=\"form-control\"\n              placeholder=\"Пароль\"\n            />\n            {this.state.errors.password && (\n              <ErrorMessage message={this.state.errors.password} />\n            )}\n          </div>\n          <div className=\"form-group\">\n            <div className='forgot-password'>\n              <Link to=\"/forgot-password\">{t('Забыли')} пароль ?</Link>\n            </div>\n            <button type=\"submit\" className=\"btn submit-btn mb-2\">{t('Войти')}</button>\n            &nbsp;\n            <button onClick={this.goToRegister} className=\"btn submit-btn mb-2\">{t('Зарегистрировтся')}</button>\n            <br/>\n            <SingInGoogle/>\n          </div>\n        </form>\n      </div>\n    )\n  }\n}\n\n\nexport default connect(\n    (state: {auth: any}) => ({\n      auth: state.auth,\n    }), {login, loading, loaded}\n    // @ts-ignore\n)(withNamespaces()(Login))\n","import Login from './login'\nexport default Login\n","import * as React from 'react'\nimport './game-info.scss'\nimport {withNamespaces} from \"react-i18next\";\n\nfunction GameInfo(props: any) {\n    const {game, t} = props\n    return (\n            <div className=\"game-info\">\n                <div>\n                    <div>{t('Город')}</div>\n                    <div>{game.city}</div>\n                </div>\n                <div>\n                    <div>Район</div>\n                    <div>{game.district}</div>\n                </div>\n                <div>\n                    <div>{t('Адрес')}</div>\n                    <div>{game.address}</div>\n                </div>\n                <div>\n                    <div>{t('Игроков')}</div>\n                    <div>{game.players} ({game.active_players})</div>\n                </div>\n                {game.additional &&\n                <div>\n                    <div>{t('Дополнительно')}</div>\n                    <div>{game.additional}</div>\n                </div>\n                }\n            </div>)\n}\n\nexport default withNamespaces()(GameInfo)\n","import GameInfo from './game-info'\nexport default GameInfo\n","import * as React from 'react';\nimport './teems-vs-flags.scss';\n\n/**\n * Teem flags in game widget\n */\nclass TeemsVsFlags extends React.Component {\n  render() {\n    return (\n      <div className=\"teems-vs-flags\">\n        <div className=\"first-teem\">\n          <div>\n            <img alt='football-teem-first' src='/img/orange-shirt.svg'/>\n          </div>\n        </div>\n        <div className=\"vs\">—</div>\n        <div className=\"second-teem\">\n          <div>\n            <img alt='football-teem-second' src='/img/white-shirt.svg'/>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\nexport default TeemsVsFlags;\n","import TeemsVsFlags from './teems-vs-flags';\nexport default TeemsVsFlags;\n","import * as React from 'react';\nimport './chat-message.scss';\n\ninterface Props {\n    message: {text: string, username: string, date: any}\n}\n\n/**\n * One chat message\n */\nclass ChatMessage extends React.Component<Props> {\n  /**\n   * @return {JSX}\n   */\n  render() {\n    const {text, username, date} = this.props.message\n    return (\n      <li className=\"chatMessage\">\n        <div className=\"message-data\">\n          <span className=\"message-data-name\">{username}\n          </span>\n          <span className=\"message-data-time\">\n            {new Date(date).toISOString().slice(0, 16).replace('T', ' ')}\n          </span>\n        </div>\n        <div className=\"message my-message shadow-0\">{text}</div>\n      </li>\n    );\n  }\n}\n\nexport default ChatMessage\n","import ChatMessage from './chat-message';\nexport default ChatMessage;\n","/* eslint-disable no-invalid-this */\nimport * as React from 'react';\nimport './chat.scss';\nimport ChatMessage from './chat-message';\nimport {connect} from 'react-redux';\nimport {addChatMessage, loadChatHistory} from '../../../ac/games';\nimport _ from 'lodash';\nimport {withGameService} from '../../../HOCs';\nimport {withNamespaces} from \"react-i18next\";\n\ninterface Props {\n  gameId: any,\n  addChatMessage: any,\n  loadChatHistory: any,\n  gameService: any,\n  gameChat: any,\n  t: any\n}\n\n/**\n * Game chat\n */\nclass Chat extends React.Component<Props> {\n  /**\n   * Init, handle socket messages\n   */\n  async componentDidMount() {\n    const {gameService, gameId} = this.props\n    await this.maintainSocketMessages(await gameService.initChat(gameId))\n    await gameService.getChatHistory(gameId)\n  }\n  componentWillUnmount(): void {\n    const {gameService} = this.props\n    gameService.destroyChat()\n  }\n\n  /**\n   * @param {object} socket\n   * @return {Promise<void>}\n   */\n  maintainSocketMessages = async (socket: any) => {\n    const {addChatMessage, loadChatHistory} = this.props;\n    socket.on('*', (message: any)=> {\n      console.log(message)\n      switch (message.data[0]) {\n        case 'GAME_CHAT_MESSAGE_HISTORY':\n          loadChatHistory(message.data[1])\n          break;\n        case 'GAME_CHAT_MESSAGE_ADDED':\n          addChatMessage(message.data[1])\n          break;\n        default:\n          break;\n      }\n    });\n  };\n  /**\n   * @type {{message: null}}\n   */\n  state = {\n    message: null,\n  };\n  /**\n   * Handle all simple text inputs\n   * @param {object} e\n   * @return {void}\n   */\n  onChange = (e: any) => {\n    this.setState({\n      [e.target.name]: e.target.value,\n    });\n  };\n  /**\n   * @param {Event} e\n   */\n  sendMessage = async (e: any) => {\n    if (e.keyCode !== 13) {\n      return\n    }\n    if (e.target.value.trim() === '') {\n      return\n    }\n    await this.submit()\n  };\n  /**\n   * Submit chat message\n   */\n  async submit() {\n    // @ts-ignore\n    document.getElementById('message').value = null\n    const {gameService, gameId, t} = this.props;\n    const {message} = _.pick(this.state, ['message']);\n    if (!message) {\n      alert('Нет смысла отправлять пустое сообщение');\n      return;\n    }\n    try {\n      await gameService.addChatMessage({\n        ..._.pick(this.state, ['message']),\n        gameId,\n      });\n      this.setState({\n        message: null,\n      });\n    } catch (error) {\n      if (error.response.status > 400 && error.response.status < 500) {\n        alert(t('Залогинтесь, для того чтобы послать сообщение в чат'));\n      }\n    }\n  }\n\n  render() {\n    const {gameChat, t} = this.props;\n    return (\n      <div className=\"chat\">\n        <hr/>\n        <div className=\"form-group\">\n          <textarea\n            onChange={this.onChange}\n            className=\"form-control\"\n            name=\"message\"\n            id=\"message\"\n            onKeyUp={this.sendMessage}\n          />\n          <br/>\n          <button\n            className=\"btn submit-btn mb-2 shadow-0\"\n            onClick={this.submit.bind(this)}>{t('Послать сообщение')}</button>\n        </div>\n        <form>\n          <ul>\n            {gameChat.entities.valueSeq().map(\n                (it: any) => {\n                  return <ChatMessage key={it.id} message={it} />\n                }\n            )}\n          </ul>\n        </form>\n      </div>\n    );\n  }\n}\n\n\nexport default connect((state: any) => {\n  return {\n    gameChat: state.gameChat,\n  };\n  // @ts-ignore\n}, {addChatMessage, loadChatHistory})(withGameService(withNamespaces()(Chat)));\n","import Chat from './chat';\nexport default Chat;\n","/* eslint-disable no-invalid-this */\nimport * as React from 'react'\n\nimport './field-player.scss'\nimport {withGameService} from '../../../HOCs'\nimport {connect} from 'react-redux'\nimport {loaded, loading} from \"../../../ac/loader\";\ninterface Props {\n  gameService: any,\n  game: any,\n  index: any,\n  gameRedux: any,\n  teem: any,\n  loading: any,\n  loaded: any\n}\n/**\n * Player ui on football field\n */\nclass FieldPlayer extends React.Component<Props> {\n  applyGame = () => {\n    const {gameService, game, index, loading, loaded} = this.props\n    loading()\n    gameService.joinGame(game.id, index).catch((e: any) => {\n      if (e.response.status > 400 && e.response.status < 500) {\n        alert('Залогинтесь сначала')\n      }\n    }).finally(loaded)\n  };\n  /**\n   * @return {JSX} html\n   */\n  render() {\n    const {teem, index, gameRedux} = this.props;\n    const isActive = gameRedux.fieldNumbersInGame\n      && gameRedux.fieldNumbersInGame.length > 0\n      && gameRedux.fieldNumbersInGame.indexOf(index) !== -1;\n    const activeShirt = '/img/'+teem+'-shirt.svg';\n    return (\n      <div className={'relative player'} onClick={this.applyGame}>\n        <div className={'number'}>{index}</div>\n        {isActive ?\n          <img className='shirt' alt={'active-shirt'} src={activeShirt}/>\n          : <img\n            alt={'grey-shirt'}\n            className={'t-shirt-grey shirt'}\n            src='/img/gray-shirt.svg' />}\n      </div>\n    );\n  }\n}\n\nexport default (withGameService)(\n    connect((state: any)=> {\n      return {\n        gameRedux: state.game,\n      };\n    }, {loading, loaded})(FieldPlayer)\n);\n","import FieldPlayer from './field-player';\nexport default FieldPlayer;\n","// @ts-nocheck\n/**\n * Football teem service\n */\nclass Teems {\n  players: any;\n  /**\n   * Get a random integer between `min` and `max`.\n   *\n   * @param {number} min - min number\n   * @param {number} max - max number\n   * @return {number} a random integer\n   */\n  randomInt = (min: number, max: number) =>\n    Math.floor(Math.random() * (max - min + 1) + min);\n  tacticOrders = {\n    2: [1, 1],\n    3: [1, 2],\n    4: [1, 2, 1],\n    5: [1, 3, 1],\n    6: [1, 3, 2],\n    7: [1, 3, 2, 1],\n    8: [1, 3, 3, 1],\n    9: [1, 3, 1, 3, 1],\n    10: [1, 3, 2, 3, 1],\n    11: [[1, 4, 4, 2], [1, 4, 3, 3]],\n  };\n  /**\n   * Init amount of players\n   * @param {number} players\n   */\n  constructor(players: any) {\n    if (isNaN(players) || players < 0) {\n      throw Error('Invalid parameter, should be number and > 0');\n    }\n    this.players = players\n  }\n  /**\n   * Calculate number of player for each teem\n   * @return {number[]}\n   */\n  splitOnTeems() {\n    if (this.players % 2) {\n      const oddPlayers = (this.players - 1) / 2;\n      return [oddPlayers + 1, oddPlayers];\n    } else {\n      const evenPlayers = this.players / 2;\n      return [evenPlayers, evenPlayers];\n    }\n  }\n\n  /**\n   * Form tactic orders\n   * @return {Array}\n   */\n  formGameOrder() {\n    const teems = this.splitOnTeems()\n    const orders = []\n    teems.forEach((it, index) => {\n      const order = Array.isArray(this.tacticOrders[it][0]) ?\n        this.tacticOrders[it][\n            this.randomInt(0, this.tacticOrders[it].length - 1)\n        ] : this.tacticOrders[it]\n      orders.push(order)\n    });\n    return orders\n  }\n}\n\nexport default Teems\n","import * as React from 'react'\nimport './football-field.scss'\nimport FieldPlayer from '../field-player'\nimport Teems from '../../../services/teems'\nimport {connect} from 'react-redux'\n\ninterface Props {\n  auth: any,\n  game: any\n}\n\nclass FootballField extends React.Component<Props> {\n  state = {\n    gameOrder: [],\n    players: 0,\n  };\n\n  static getDerivedStateFromProps(nextProps: any, prevState: any): {players: number; gameOrder: any} {\n    return ({\n      gameOrder: nextProps.game.players === prevState.players?\n        prevState.gameOrder:\n        new Teems(nextProps.game.players).formGameOrder(),\n      players: nextProps.game.players})\n  }\n\n  render() {\n    const {auth} = this.props;\n    let fieldClass = ` football-field `;\n    fieldClass += auth.isAuthenticated ? `active` : `regular`;\n    return (\n        <div>\n          <div className=\"north-socket\" />\n          <div className={fieldClass}>\n            <div className='football-field-center'/>\n            <div className=\"left-top-corner\"/>\n            <div className=\"right-top-corner\"/>\n            <div className=\"left-bottom-corner\"/>\n            <div className=\"right-bottom-corner\"/>\n            {this.state.gameOrder.length > 0 && this.generateLines()}\n          </div>\n          <div className=\"south-socket\" />\n        </div>\n    );\n  }\n  /**\n   * Generate tactic lines on field, each line contains few players\n   */\n  generateLines() {\n    const lines = [];\n    const {game} = this.props;\n    let total = game.players;\n    const teemsOnField = [[], []];\n    let row = [];\n    let rowNum = 1;\n    this.state.gameOrder.forEach((it: any, index) => {\n      it.forEach((it: any)=> {\n        row = [];\n        for (let i = 1; i <= it && total > 0; i++) {\n          row.push(\n              <FieldPlayer\n                teem={index === 0 ? 'orange' : 'white'}\n                key={i}\n                game={game}\n                index={total}\n                isActive={false}/>);\n          total--\n        }\n        teemsOnField[index].push(\n            // @ts-ignore\n            <div key={rowNum++} className={'tactic-line '}>{row}</div>\n        )\n      })\n    });\n    lines.push(<div\n      key={'north-side'}\n      className={`half-field north-side lines-${teemsOnField[0].length}`}>\n      {teemsOnField[0]}</div>);\n    lines.push(<div\n      key={'south-side'}\n      className={`half-field south-side lines-${teemsOnField[1].length}`}>\n      {teemsOnField[1]}</div>);\n    return lines\n  }\n}\n\nexport default connect((state: any) => {\n  return {\n    auth: state.auth,\n  }\n})(FootballField)\n","import FootballField from './football-field';\nexport default FootballField;\n","import * as React from 'react'\nimport {withGameService} from '../../HOCs'\nimport {loadGame} from '../../ac/games'\nimport {connect} from 'react-redux'\n// import {library} from '@fortawesome/fontawesome-svg-core'\n// import {faFutbol} from '@fortawesome/free-solid-svg-icons'\nimport GameInfo from './game-info'\nimport TeemsVsFlags from './teems-vs-flags'\nimport Chat from './chat'\nimport './game.scss'\nimport FootballField from './football-field';\nimport { withNamespaces } from 'react-i18next';\n// library.add(faFutbol)\n\ninterface Props {\n  match: any,\n  loadGame: any,\n  game: any,\n  auth: any,\n  t: any\n}\n\nclass Game extends React.Component<Props> {\n  state = {\n    gameOrder: [],\n    players: 0,\n  }\n\n  componentDidMount() {\n    document.title = 'Football for everyone';\n    const { match: {params}, loadGame} = this.props;\n    const {id} = params;\n    loadGame(id);\n  }\n\n  render() {\n    const {game, auth, t} = this.props;\n    const {match: {params}} = this.props;\n    const {id} = params;\n    return (\n      <div>\n        <div className=\"row game\">\n          <div className=\"left-col\">\n            <div>\n              <p>\n                {auth.isAuthenticated ? t('Чтобы присоединится нажмите на футболку') : t('Чтобы присоединится, залогинтесь и нажмите на футболку')}\n              </p>\n            </div>\n            <div className=\"football-field-wrapper shadow-1\">\n              <div>\n                // @ts-ignore\n                <FootballField game={game}/>\n              </div>\n            </div>\n          </div>\n          <div className='right-col'>\n              <div className='flags-info'>\n                <GameInfo game={game}/>\n                <TeemsVsFlags/>\n              </div>\n              <Chat gameId={id}/>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default connect(\n    (state: any) => {\n      return {\n        game: state.game,\n        auth: state.auth,\n      };\n    },\n    // @ts-ignore\n    {loadGame})(withGameService(withNamespaces()(Game)));\n","import Game from './game';\nexport default Game;\n","import * as React from 'react';\nimport './about.scss';\nimport {withNamespaces} from \"react-i18next\";\ninterface Props {\n    t: any\n}\n/**\n * About page\n */\nclass About extends React.Component<Props> {\n\n  componentDidMount() {\n    About.setMeta();\n  }\n\n  /**\n   * @return {string} html\n   */\n  render() {\n    const {t} = this.props\n    return (\n      <h3>\n        <article>\n            <i>\n            {t('Если ты не знаешь, где найти людей для игры в футбол - это сайт как раз для тебя! Тут ты можешь собрать команду для игры в футбол. Тут ты можешь создать игру либо присоединится к уже существующей.')}\n            </i>\n            </article>\n      </h3>\n    );\n  }\n\n  static setMeta() {\n    document.title = 'About';\n  }\n}\n\n// @ts-ignore\nexport default withNamespaces()(About);\n","import About from './about';\nexport default About;\n\n","import * as React from 'react'\nimport './registration.scss'\nimport ErrorMessage from '../../../components/common/messages/error-message'\nimport Validator from 'validator'\n\nimport _ from 'lodash'\nimport {registration} from '../../../ac/auth'\nimport {connect} from 'react-redux'\nimport {loaded, loading} from \"../../../ac/loader\";\nimport {withNamespaces} from \"react-i18next\";\n\ninterface Props {\n  registration: any,\n  history: any,\n  loading:any,\n  loaded: any,\n  t: any\n}\n\n/**\n * Registration page\n */\nclass Registration extends React.Component<Props> {\n\n  state = {\n    data: {\n      email: '',\n      password: '',\n      name: '',\n      repeatPassword: '',\n    },\n    loading: false,\n    errors: {email: null, repeatPassword: null, password: null, name: null},\n    backendErrors: [],\n  }\n\n  /**\n   * Handle all simple text inputs\n   * @param {object} e\n   * @return {void}\n   */\n  onChange = (e: any) => {\n    this.setState({\n      data: {...this.state.data, [e.target.name]: e.target.value},\n    })\n  };\n\n  /**\n   * Form validation\n   * @return {object}\n   */\n  validate = (data: any) => {\n    const {t} = this.props\n    const errors : {\n      password: string | null,\n      email: string | null,\n      name: string | null,\n      repeatPassword: string | null\n    } = {password: null, email: null, name: null, repeatPassword: null}\n    if (!data.password) errors.password = t(`Не может быть пустым`)\n    if (!data.email) errors.email = t(`Не может быть пустым`)\n    if (!data.name) errors.name = t(`Не может быть пустым`)\n    if (!data.password !== !data.repeatPassword) {\n      errors.repeatPassword = t(`Пароли не совпадают`)\n    }\n    if (!Validator.isEmail(data.email)) errors.email = t(`Не валидный емейл`)\n    return errors\n  };\n\n  onSubmit = async (e: any) => {\n    const {t} = this.props\n    const {data} = this.state\n    e.preventDefault()\n    const errors: any = this.validate(data)\n    this.setState({errors})\n    for (const i in errors) {\n      if (errors[i]) {\n        return\n      }\n    }\n    const registrationData = _.pick(data, ['name', 'password', 'email'])\n    const { registration, loading, loaded } = this.props\n    try {\n      loading()\n      await registration(registrationData)\n      this.props.history.push(`/complete-registration`)\n    } catch (err) {\n      switch (err.status) {\n        case 403:\n          this.setState({backendErrors: [t('Такой пользователь уже существует')]}\n          )\n          break\n        default:\n          this.setState({backendErrors: err.data.errors})\n      }\n    } finally {\n      loaded()\n    }\n  };\n\n  render() {\n    const {t} = this.props\n    const {data} = this.state;\n    return (\n      <form className=\"\n      col-12\n      col-md-12\n      col-sm-12\n      col-lg-6\n      col-xl-6\n      login-form\" onSubmit={this.onSubmit}>\n        {\n          this.state.backendErrors ? this.state.backendErrors.map(\n              (it) => <ErrorMessage key={it} message={it}/>) : null\n        }\n        <div className=\"form-group\">\n          <label>Ник</label>\n          <input\n            type=\"name\"\n            id=\"name\"\n            name=\"name\"\n            value={data.name}\n            placeholder={t('Будет отображатся в интерфейсе')}\n            onChange={this.onChange}\n            className=\"form-control\"\n          />\n          {this.state.errors.name && (\n            <ErrorMessage message={this.state.errors.name} />\n          )}\n        </div>\n        <div className=\"form-group\">\n          <label htmlFor=\"exampleInputEmail1\">E-mail {t('адрес')}</label>\n          <input\n            type=\"email\"\n            id=\"email\"\n            name=\"email\"\n            placeholder=\"example@gmail.com\"\n            value={data.email}\n            onChange={this.onChange}\n            className=\"form-control\"\n          />\n          {this.state.errors.email && (\n            <ErrorMessage message={this.state.errors.email} />\n          )}\n        </div>\n\n        <div className=\"form-group\">\n          <label>Пароль</label>\n          <input\n            type=\"password\"\n            id=\"password\"\n            name=\"password\"\n            value={data.password}\n            onChange={this.onChange}\n            className=\"form-control\"\n            placeholder=\"Пароль\"\n          />\n          {this.state.errors.password && (\n            <ErrorMessage message={this.state.errors.password} />\n          )}\n        </div>\n        <div className=\"form-group\">\n          <input\n            type=\"password\"\n            id=\"repeatPassword\"\n            name=\"repeatPassword\"\n            value={data.repeatPassword}\n            onChange={this.onChange}\n            className=\"form-control\"\n            placeholder={t(\"Повторите пароль\")}\n          />\n          {this.state.errors.repeatPassword && (\n            <ErrorMessage message={this.state.errors.repeatPassword} />\n          )}\n        </div>\n        <div className=\"form-group\">\n          <button type=\"submit\" className=\"btn submit-btn mb-2\">\n            {t('Зарегистрировтся')}\n          </button>\n        </div>\n      </form>\n    )\n  }\n}\n\n// @ts-ignore\nexport default connect(null, {registration, loading, loaded})(withNamespaces()(Registration))\n","import Registration from './registration';\nexport default Registration;\n","import * as React from 'react';\n\nexport default class CompleteRegistration extends React.Component {\n  render() {\n    return (\n      <div>\n        На вашу почту было отправлено письмо,\n        чтобы закончить регистрацию перейдите по ссылке\n      </div>\n    );\n  }\n}\n","import CompleteRegistration from './complete-registration';\nexport default CompleteRegistration;\n","import * as React from \"react\"\nimport {connect} from 'react-redux'\nimport './account.scss'\nimport ErrorMessage from '../../components/common/messages/error-message'\nimport {loaded, loading} from \"../../ac/loader\";\nimport {changePassword} from \"../../ac/auth\";\ninterface InputPasswords {password: string, confirmPassword: string}\n\ninterface Props {\n    auth: any,\n    loaded: any,\n    loading: any,\n    changePassword: any\n}\nclass Account extends React.Component<Props> {\n    state = {\n        data: {\n            password: '',\n            confirmPassword: ''\n        },\n        loading: false,\n        backendErrors: [],\n        errors: {password: '', confirmPassword: ''},\n    }\n    onChange = (e: any) => {\n        this.setState({data: {...this.state.data, [e.target.name]: e.target.value}})\n    }\n    componentDidMount(): void {\n        const { auth } = this.props;\n        if (!auth.isAuthenticated) {\n            window.location.href  = '/';\n        }\n    }\n\n    static validate({password, confirmPassword}: InputPasswords): InputPasswords {\n        if((!password || !confirmPassword) || password !== confirmPassword) {\n            throw Error('Не валидное значение')\n        }\n        return {password, confirmPassword}\n    }\n\n    onSubmit = async (e: any) => {\n        const {loaded, loading, changePassword} = this.props\n        loading()\n        e.preventDefault();\n        try {\n            const {password} = Account.validate(this.state.data)\n            this.setState({\n                ...this.state,\n                errors: {password: '', confirmPassword: ''}\n            })\n            await changePassword(password)\n        } catch (e) {\n            this.setState({\n                ...this.state,\n                errors: {\n                    password: e.toString().slice(7,100),\n                    confirmPassword: e.toString().slice(7,100)\n                }\n            })\n        } finally {\n           loaded()\n        }\n    }\n    render(): React.ReactNode {\n        const {user} = this.props.auth;\n        if(user.type === 'google') {\n            return (\n              <div>\n                  <h3>{user.name}</h3>\n                  <p>google account</p>\n              </div>\n            )\n        }\n        return (\n            <form className='col-12 col-md-12 col-sm-12 col-lg-6 col-xl-6 login-form'\n                  onSubmit={this.onSubmit}>\n                {this.state.errors.password && (\n                    <ErrorMessage message={this.state.errors.password} />\n                )}\n                <h2>{user.name}</h2>\n                <h3>Сменить пароль</h3>\n                <div>\n                    <label>Новый пароль</label>\n                </div>\n                <div>\n                    <input onChange={this.onChange} name='password' className='form-control'/>\n                </div>\n                {this.state.errors.confirmPassword && (\n                    <ErrorMessage message={this.state.errors.confirmPassword} />\n                )}\n                <div>\n                    <label>Подтвердить пароль</label>\n                </div>\n                <div>\n                    <input onChange={this.onChange} name='confirmPassword' className='form-control'/>\n                </div>\n                <br/>\n                <div className='form-group'>\n                    <button type=\"submit\" className=\"btn submit-btn shadow-0\">Сменить пароль</button>\n                </div>\n                <br/>\n            </form>\n        );\n    }\n}\nexport default connect((state: any) => {\n    return {\n        auth: state.auth,\n    };\n}, {loaded, loading, changePassword})(Account)\n","import Account from './account'\nexport default Account\n","import * as React from 'react'\nimport './game-item.scss'\nimport {withRouter} from 'react-router-dom'\nimport {RouteComponentProps} from 'react-router-dom'\nimport TableRow from '@material-ui/core/TableRow';\nimport TableCell from '@material-ui/core/TableCell';\ninterface Props extends RouteComponentProps<any> {\n  history: any,\n  item: any\n}\n\nclass GameItem extends React.Component<Props> {\n  click = () => {\n    this.props.history.push(`/game/${this.props.item.id}`)\n  }\n  dateToReadable() {\n    const {date} = this.props.item\n    return new Date(date).toISOString().slice(0, 16).replace('T', ' ')\n  }\n  render() {\n    const {address, district, players, activePlayers, id} = this.props.item\n    if (!this.props.item) {return null}\n    return (\n        <TableRow key={id} onClick={this.click}>\n          <TableCell>{district}</TableCell>\n          <TableCell>{address}</TableCell>\n          <TableCell>{this.dateToReadable()}</TableCell>\n          <TableCell>{players} ({activePlayers})</TableCell>\n        </TableRow>\n    )\n  }\n}\nexport default withRouter<Props, any>(GameItem)\n","import GameItem from './game-item';\nexport default GameItem;\n","import * as React from 'react'\nimport './input-barrette.scss'\n\ninterface Props {\n  onChange: any,\n}\nclass InputBarrette extends React.Component<Props> {\n  onChange = (e: any) => {\n    this.props.onChange(e)\n  }\n\n  render() {\n    return (\n      <div className=\"input-barrette-wrap\">\n        <div className=\"input-barrette shadow-1\">\n          <div>\n            <input\n              type=\"text\"\n              className=\"form-control\"\n              onChange={this.onChange}\n              placeholder=\"район\"/>\n          </div>\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default InputBarrette\n","import InputBarrette from './input-barrette';\nexport default InputBarrette;\n","/* eslint-disable no-invalid-this */\nimport * as React from 'react'\nimport './set-city-widget.scss'\nimport CityPicker from '../../../components/common/city-picker'\nimport {connect} from 'react-redux'\nimport {setCity} from '../../../ac/location'\n\ninterface Props {\n  setCity: any,\n  location: any\n}\n/**\n * Set city on which all further game sessions will be based on\n */\nclass SetCityWidget extends React.Component<Props> {\n\n  componentDidMount() {\n    const strLocation = localStorage.getItem('location');\n    if (!strLocation) {\n      return\n    }\n    const {setCity} = this.props\n    try {\n      // @ts-ignore\n      setCity(JSON.parse(localStorage.getItem('location')));\n    } catch (e) {\n      console.error(e)\n    }\n  }\n  resetCity = () => {\n    const {setCity} = this.props;\n    setCity(null);\n  };\n\n  setCity = (city: any) => {\n    const {setCity} = this.props;\n    setCity(city)\n  };\n\n  render() {\n    return (\n      <div className=\"city-widget\">\n        {this.props.location.id ? (\n          <span onClick={this.resetCity} className=\"city-name shadow-1\">\n            {this.props.location.name}\n          </span>\n        ) : (\n          <div className=\"table-city-picker shadow-1\">\n            <CityPicker doChoice={this.setCity}/>\n          </div>\n        )}\n      </div>\n    )\n  }\n}\n\nexport default connect(\n    (state: {location: any}) => {\n      return {\n        location: state.location,\n      };\n    },\n    {setCity}\n)(SetCityWidget)\n","import SetCityWidget from './set-city-widget';\nexport default SetCityWidget;\n","import * as React from 'react';\nimport {connect} from 'react-redux';\nimport {withGameService} from '../../HOCs';\nimport GameItem from './game-item';\nimport './games-list.scss';\nimport InputBarrette from '../../components/common/input-barrette'\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport Paper from '@material-ui/core/Paper'\nimport {withNamespaces} from \"react-i18next\";\nimport SetCityWidget from \"../common/set-city-widget\";\n\ninterface Props {\n  games: any,\n  t: any\n}\n\n\nclass GamesList extends React.Component<Props> {\n  state = {\n    district: null,\n  };\n\n  filterDistrict = (e: any) => {\n    this.setState({\n      district: e.target.value,\n    });\n  };\n\n  render() {\n    const {games, t} = this.props;\n    if (!games.entities.valueSeq().size) {\n      return <SetCityWidget/>;\n    }\n\n    return (\n        <div className='game-sessions-greed'>\n          <SetCityWidget/>\n          <div className=\"head-game-list\">\n            <div className={'district'}>\n              <InputBarrette onChange={this.filterDistrict}/>\n            </div>\n          </div>\n            <TableContainer component={Paper}>\n              <Table aria-label=\"simple table\">\n                <TableHead>\n                  <TableRow>\n                    <TableCell>Район</TableCell>\n                    <TableCell align=\"right\">{t('Адрес')}</TableCell>\n                    <TableCell align=\"right\">{t('Время')}</TableCell>\n                    <TableCell align=\"right\">{t('Игроков')}</TableCell>\n                  </TableRow>\n                </TableHead>\n                <TableBody>\n                  {games.entities.valueSeq().filter((it: any) => {\n                    if (!this.state.district) return true;\n                    return it.district.includes(this.state.district);\n                  }).map((it: any) => <GameItem key={it.id} item={it}/>)}\n                </TableBody>\n              </Table>\n            </TableContainer>\n        </div>\n    )\n  }\n}\n\n\nexport default connect(\n    (state: any) => {\n      return {\n        location: state.location,\n        games: state.games,\n      };\n    },\n    null\n)(withGameService(\n    // @ts-ignore\n    withNamespaces()(GamesList)));\n","import GamesList from './games-list';\nexport default GamesList;\n","import * as i18n from \"i18next\";\nimport { reactI18nextModule } from \"react-i18next\";\n// @ts-ignore\nimport translationUA from './locales/ua/translation.json';\n\n// the translations\nconst resources = {\n    ua: {\n        translation: translationUA\n    }\n};\n// @ts-ignore\ni18n.default.use(reactI18nextModule) // passes i18n down to react-i18next\n    .init({\n        resources,\n        lng: \"ru\",\n\n        keySeparator: false, // we do not use keys in form messages.welcome\n\n        interpolation: {\n            escapeValue: false // react already safes from xss\n        }\n    });\n\nexport default i18n.default;\n","import * as React from 'react';\nimport * as i18n from \"../../i18n\";\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\nimport {faGlobe} from \"@fortawesome/free-solid-svg-icons\";\nimport './locales.scss'\nexport default class Locales extends React.Component {\n    async setLocale(locale: string) {\n        await i18n.default.changeLanguage(locale)\n        return null\n    }\n    render(): React.ReactNode {\n        return (\n            <div className='locales'>\n                {/*<FontAwesomeIcon icon={faGlobe} size='2x'/>*/}\n                <a href=\"#\" data-loc=\"ua\" onClick={this.setLocale.bind(null, 'ua')}>\n                    <img src='/locales/ua-32.png'/>\n                </a>\n                <span>  </span>\n                <a href=\"#\" data-loc=\"ru\" onClick={this.setLocale.bind(null, 'ru')}>\n                    <img src='/locales/ru-32.png'/>\n                </a>\n            </div>\n        )\n    }\n}\n","import Locales from './locales';\nexport default Locales;\n","import * as React from 'react'\nimport Header from './components/header'\nimport CreateGame from './components/create-game'\nimport ForgotPassword from './components/auth/forgot-password'\nimport Login from './components/auth/login'\nimport './bootstrap.css'\nimport {Route} from 'react-router-dom'\nimport './app.scss'\nimport Game from './components/game'\nimport About from './components/about'\nimport Registration from './components/auth/registration'\nimport {connect} from 'react-redux'\nimport {withRouter} from 'react-router-dom'\nimport CompleteRegistration from './components/auth/complete-registration'\nimport Account from \"./components/account\";\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport {authGuard} from './HOCs'\nimport GamesList from './components/games-list'\nimport {checkIfLogged} from \"./ac/auth\";\nimport Locales from './components/locales'\nimport './i18n';\ninterface Props {\n  location: any,\n  loader: any,\n  checkIfLogged: any\n}\n\n/**\n * Root of application\n */\nclass App extends React.Component<Props> {\n  render() {\n    const {location, loader} = this.props\n    const {loading} = loader\n    const {checkIfLogged} = this.props\n    console.log('loading', loading)\n    checkIfLogged().then(console.log)\n    return (\n        <div className={location.id && 'city-picked'}>\n          <Header/>\n          <Locales/>\n          {loading && <CircularProgress className={'loader-spinner'} color='primary' size={400} thickness={0.3}/>}\n          <div className=\"container main-content\">\n            <Route path=\"/about\" exact component={About}/>\n            <Route path=\"/account\" exact component={authGuard(Account)}/>\n            <Route path=\"/login\" exact component={Login}/>\n            <Route path=\"/game/:id\" exact component={Game}/>\n            <Route path=\"/forgot-password\" exact component={ForgotPassword}/>\n            <Route path=\"/registration\" exact component={Registration}/>\n            <Route path=\"/create-game\" exact component={CreateGame}/>\n            <Route path=\"/complete-registration\" exact\n                   // @ts-ignore\n                   component={CompleteRegistration}/>\n            <Route path=\"/\" exact component={GamesList}/>\n          </div>\n        </div>\n    )\n  }\n}\n\n// @ts-ignore\nexport default withRouter(connect((state: { location: any; loader: any }) => {\n  return {\n    location: state.location,\n    loader: state.loader,\n  }\n}, {checkIfLogged})(App));\n\n","import axios from '../libs/axios'\n\n/**\n * Service for working with cities\n */\nclass CityService {\n\n  getCities(city: any) {\n    if (city) {\n      return axios.get(`/cities/getByName/${city}`).then((res) => res.data)\n    }\n    return new Promise((resolve) => {\n      resolve([])\n    })\n  }\n}\n\nexport default CityService\n","import axios from '../libs/axios'\nimport {AxiosPromise} from 'axios'\nimport io from 'socket.io-client'\nconst patch = require('socketio-wildcard')(io.Manager)\n\nclass GameService {\n\n  private _gameSocket!: SocketIOClient.Socket;\n\n  add(game: any): AxiosPromise<{status: number}> {\n    game.date = game.date.format().split('+')[0]+'+0000'\n    return axios.post(`/game`, game)\n  }\n\n  initChat(id: number): Promise<SocketIOClient.Socket> {\n    return new Promise((resolve) => {\n      this._gameSocket = io({path: `/chat/game`})\n      patch(this._gameSocket)\n      this._gameSocket.on('connect', () => {\n        this._gameSocket.emit('join', `game${id}`, resolve(this._gameSocket))\n      })\n    })\n  }\n\n  destroyChat() {\n    this._gameSocket.disconnect()\n  }\n\n  addChatMessage(message: any) {\n    return axios.post(`/game/chat`, message)\n  }\n\n  getChatHistory(gameId: number) {\n    return axios.get(`/game/chat/history/${gameId}`)\n  }\n\n  joinGame(gameId: number, playerNumber: number) {\n    return axios.post(`/game/join`, {gameId, playerNumber})\n  }\n}\nexport default GameService\n","import io from 'socket.io-client'\nimport store from './store'\nimport {GAME_ADDED, PLAYER_JOINED} from './constants'\nimport {gameAdded, playerJoined} from './ac/games'\nconst patch = require('socketio-wildcard')(io.Manager)\nconst gameSocket =\n  io({path: '/chat/game'})\nconst generalSocket =\n  io({path: '/chat/general'})\npatch(generalSocket)\npatch(gameSocket)\n\n/**\n * Common sockets func\n */\nfunction sockets() {\n  generalSocket.on('*', (message: any) => {\n    switch (message.data[0]) {\n      case GAME_ADDED:\n        console.log('game added');\n        store.dispatch(gameAdded(message.data[1]));\n        break;\n      case PLAYER_JOINED:\n        console.log('pl joined');\n        const {gameId, players, info} = message.data[1];\n        store.dispatch(playerJoined(gameId, players, info));\n        break;\n      default:\n        console.log('unknown action');\n        break;\n    }\n  });\n}\nexport {sockets, gameSocket, generalSocket};\n","// @ts-nocheck\nimport * as React from 'react';\nimport * as ReactDOM from 'react-dom';\nimport {BrowserRouter} from 'react-router-dom';\nimport {Provider} from 'react-redux';\nimport App from './App';\nimport store from './store';\nimport CityService from './services/city';\nimport {CityServiceProvider} from './context/city-service-context';\nimport {GameServiceProvider} from './context/game-service-context';\nimport GameService from './services/game';\nimport {sockets} from './sockets';\nsockets();\nReactDOM.hydrate(\n    <BrowserRouter>\n      <Provider store={store}>\n        <CityServiceProvider value={new CityService()}>\n        <GameServiceProvider value={new GameService()}>\n          <App />\n        </GameServiceProvider>\n        </CityServiceProvider>\n      </Provider>\n    </BrowserRouter>,\n    document.getElementById('root')\n);\n"],"sourceRoot":""}