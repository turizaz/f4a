{"ast":null,"code":"import*as React from'react';import Header from'./components/header';import CreateGame from'./components/create-game';import ForgotPassword from'./components/auth/forgot-password';import Login from'./components/auth/login';import'./bootstrap.css';import{Route}from'react-router-dom';import'./app.scss';import Game from'./components/game';import About from'./components/about';import Registration from'./components/auth/registration';import{connect}from'react-redux';import{withRouter}from'react-router-dom';import CompleteRegistration from'./components/auth/complete-registration';import Account from\"./components/account\";import CircularProgress from'@material-ui/core/CircularProgress';import{authGuard}from'./HOCs';import GamesList from'./components/games-list';import{checkIfLogged}from\"./ac/auth\";import Locales from'./components/locales';import'./i18n';/**\n * Root of application\n */class App extends React.Component{render(){const _this$props=this.props,location=_this$props.location,loader=_this$props.loader;const loading=loader.loading;const checkIfLogged=this.props.checkIfLogged;console.log('loading',loading);checkIfLogged().then(console.log);return/*#__PURE__*/React.createElement(\"div\",{className:location.id&&'city-picked'},/*#__PURE__*/React.createElement(Header,null),/*#__PURE__*/React.createElement(Locales,null),loading&&/*#__PURE__*/React.createElement(CircularProgress,{className:'loader-spinner',color:\"primary\",size:400,thickness:0.3}),/*#__PURE__*/React.createElement(\"div\",{className:\"container main-content\"},/*#__PURE__*/React.createElement(Route,{path:\"/about\",exact:true,component:About}),/*#__PURE__*/React.createElement(Route,{path:\"/account\",exact:true,component:authGuard(Account)}),/*#__PURE__*/React.createElement(Route,{path:\"/login\",exact:true,component:Login}),/*#__PURE__*/React.createElement(Route,{path:\"/game/:id\",exact:true,component:Game}),/*#__PURE__*/React.createElement(Route,{path:\"/forgot-password\",exact:true,component:ForgotPassword}),/*#__PURE__*/React.createElement(Route,{path:\"/registration\",exact:true,component:Registration}),/*#__PURE__*/React.createElement(Route,{path:\"/create-game\",exact:true,component:CreateGame}),/*#__PURE__*/React.createElement(Route,{path:\"/complete-registration\",exact:true// @ts-ignore\n,component:CompleteRegistration}),/*#__PURE__*/React.createElement(Route,{path:\"/\",exact:true,component:GamesList})));}}// @ts-ignore\nexport default withRouter(connect(state=>{return{location:state.location,loader:state.loader};},{checkIfLogged})(App));","map":{"version":3,"sources":["/Users/yaroslavudodov/Code/f4e/ssr/client/src/App.tsx"],"names":["React","Header","CreateGame","ForgotPassword","Login","Route","Game","About","Registration","connect","withRouter","CompleteRegistration","Account","CircularProgress","authGuard","GamesList","checkIfLogged","Locales","App","Component","render","props","location","loader","loading","console","log","then","id","state"],"mappings":"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","sourcesContent":["import * as React from 'react'\nimport Header from './components/header'\nimport CreateGame from './components/create-game'\nimport ForgotPassword from './components/auth/forgot-password'\nimport Login from './components/auth/login'\nimport './bootstrap.css'\nimport {Route} from 'react-router-dom'\nimport './app.scss'\nimport Game from './components/game'\nimport About from './components/about'\nimport Registration from './components/auth/registration'\nimport {connect} from 'react-redux'\nimport {withRouter} from 'react-router-dom'\nimport CompleteRegistration from './components/auth/complete-registration'\nimport Account from \"./components/account\";\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport {authGuard} from './HOCs'\nimport GamesList from './components/games-list'\nimport {checkIfLogged} from \"./ac/auth\";\nimport Locales from './components/locales'\nimport './i18n';\ninterface Props {\n  location: any,\n  loader: any,\n  checkIfLogged: any\n}\n\n/**\n * Root of application\n */\nclass App extends React.Component<Props> {\n  render() {\n    const {location, loader} = this.props\n    const {loading} = loader\n    const {checkIfLogged} = this.props\n    console.log('loading', loading)\n    checkIfLogged().then(console.log)\n    return (\n        <div className={location.id && 'city-picked'}>\n          <Header/>\n          <Locales/>\n          {loading && <CircularProgress className={'loader-spinner'} color='primary' size={400} thickness={0.3}/>}\n          <div className=\"container main-content\">\n            <Route path=\"/about\" exact component={About}/>\n            <Route path=\"/account\" exact component={authGuard(Account)}/>\n            <Route path=\"/login\" exact component={Login}/>\n            <Route path=\"/game/:id\" exact component={Game}/>\n            <Route path=\"/forgot-password\" exact component={ForgotPassword}/>\n            <Route path=\"/registration\" exact component={Registration}/>\n            <Route path=\"/create-game\" exact component={CreateGame}/>\n            <Route path=\"/complete-registration\" exact\n                   // @ts-ignore\n                   component={CompleteRegistration}/>\n            <Route path=\"/\" exact component={GamesList}/>\n          </div>\n        </div>\n    )\n  }\n}\n\n// @ts-ignore\nexport default withRouter(connect((state: { location: any; loader: any }) => {\n  return {\n    location: state.location,\n    loader: state.loader,\n  }\n}, {checkIfLogged})(App));\n\n"]},"metadata":{},"sourceType":"module"}