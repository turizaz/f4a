{"ast":null,"code":"import*as React from'react';import{connect}from'react-redux';export default(OriginalComponent=>{class MixedComponent extends React.Component{checkAuth(){if(!this.props.isAuthenticated){this.props.history.push('/');}}componentDidMount(){this.checkAuth();}componentDidUpdate(){this.checkAuth();}render(){return/*#__PURE__*/React.createElement(OriginalComponent,this.props);}}function mapStateToProps(state){return{isAuthenticated:state.auth.isAuthenticated};}return connect(mapStateToProps)(MixedComponent);});","map":{"version":3,"sources":["/Users/yaroslavudodov/Code/f4e/ssr/client/src/HOCs/authGuard.tsx"],"names":["React","connect","OriginalComponent","MixedComponent","Component","checkAuth","props","isAuthenticated","history","push","componentDidMount","componentDidUpdate","render","mapStateToProps","state","auth"],"mappings":"AAAA,MAAO,GAAKA,CAAAA,KAAZ,KAAuB,OAAvB,CACA,OAASC,OAAT,KAAwB,aAAxB,CAKA,eAAgBC,iBAAD,EAA2B,CACxC,KAAMC,CAAAA,cAAN,QAA6BH,CAAAA,KAAK,CAACI,SAAiB,CAElDC,SAAS,EAAG,CACV,GAAI,CAAC,KAAKC,KAAL,CAAWC,eAAhB,CAAiC,CAC/B,KAAKD,KAAL,CAAWE,OAAX,CAAmBC,IAAnB,CAAwB,GAAxB,EACD,CACF,CAEDC,iBAAiB,EAAG,CAClB,KAAKL,SAAL,GACD,CAEDM,kBAAkB,EAAG,CACnB,KAAKN,SAAL,GACD,CAEDO,MAAM,EAAG,CACP,mBAAO,oBAAC,iBAAD,CAAuB,KAAKN,KAA5B,CAAP,CACD,CAlBiD,CAqBpD,QAASO,CAAAA,eAAT,CAAyBC,KAAzB,CAA+C,CAC7C,MAAO,CACLP,eAAe,CAAEO,KAAK,CAACC,IAAN,CAAWR,eADvB,CAAP,CAGD,CAED,MAAON,CAAAA,OAAO,CAACY,eAAD,CAAP,CAAyBV,cAAzB,CAAP,CACD,CA7BD","sourcesContent":["import * as React from 'react';\nimport { connect } from 'react-redux';\ninterface Props {\n  isAuthenticated: any,\n  history: any,\n}\nexport default (OriginalComponent:any) => {\n  class MixedComponent extends React.Component<Props> {\n\n    checkAuth() {\n      if (!this.props.isAuthenticated) {\n        this.props.history.push('/');\n      }\n    }\n\n    componentDidMount() {\n      this.checkAuth();\n    }\n\n    componentDidUpdate() {\n      this.checkAuth();\n    }\n\n    render() {\n      return <OriginalComponent {...this.props} />;\n    }\n  }\n\n  function mapStateToProps(state: {auth: Props}) {\n    return {\n      isAuthenticated: state.auth.isAuthenticated,\n    }\n  }\n\n  return connect(mapStateToProps)(MixedComponent);\n};\n\n\n"]},"metadata":{},"sourceType":"module"}