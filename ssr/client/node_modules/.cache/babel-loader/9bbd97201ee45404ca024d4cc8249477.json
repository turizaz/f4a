{"ast":null,"code":"'use strict';\n\nvar BuiltInEmitter = require('events').EventEmitter;\n\nmodule.exports = function (CustomEmitter) {\n  var Emitter = CustomEmitter || BuiltInEmitter;\n  var emit = Emitter.prototype.emit;\n\n  function onevent(packet) {\n    var args = packet.data || [];\n\n    if (packet.id != null) {\n      args.push(this.ack(packet.id));\n    }\n\n    emit.call(this, '*', packet);\n    return emit.apply(this, args);\n  }\n\n  return function (socket, next) {\n    if (socket.onevent !== onevent) {\n      socket.onevent = onevent;\n    }\n\n    return next ? next() : null;\n  };\n};","map":{"version":3,"sources":["/Users/yaroslavudodov/Code/f4e/ssr/client/node_modules/socketio-wildcard/index.js"],"names":["BuiltInEmitter","require","EventEmitter","module","exports","CustomEmitter","Emitter","emit","prototype","onevent","packet","args","data","id","push","ack","call","apply","socket","next"],"mappings":"AAAA;;AACA,IAAIA,cAAc,GAAGC,OAAO,CAAC,QAAD,CAAP,CAAkBC,YAAvC;;AAEAC,MAAM,CAACC,OAAP,GAAiB,UAAUC,aAAV,EAAyB;AACxC,MAAIC,OAAO,GAAGD,aAAa,IAAIL,cAA/B;AACA,MAAIO,IAAI,GAAGD,OAAO,CAACE,SAAR,CAAkBD,IAA7B;;AAEA,WAASE,OAAT,CAAkBC,MAAlB,EAA0B;AACxB,QAAIC,IAAI,GAAGD,MAAM,CAACE,IAAP,IAAe,EAA1B;;AACA,QAAIF,MAAM,CAACG,EAAP,IAAa,IAAjB,EAAuB;AACrBF,MAAAA,IAAI,CAACG,IAAL,CAAU,KAAKC,GAAL,CAASL,MAAM,CAACG,EAAhB,CAAV;AACD;;AACDN,IAAAA,IAAI,CAACS,IAAL,CAAU,IAAV,EAAgB,GAAhB,EAAqBN,MAArB;AACA,WAAOH,IAAI,CAACU,KAAL,CAAW,IAAX,EAAiBN,IAAjB,CAAP;AACD;;AAED,SAAO,UAAUO,MAAV,EAAkBC,IAAlB,EAAwB;AAC7B,QAAID,MAAM,CAACT,OAAP,KAAmBA,OAAvB,EAAgC;AAC9BS,MAAAA,MAAM,CAACT,OAAP,GAAiBA,OAAjB;AACD;;AACD,WAAOU,IAAI,GAAGA,IAAI,EAAP,GAAY,IAAvB;AACD,GALD;AAMD,CAnBD","sourcesContent":["'use strict'\nvar BuiltInEmitter = require('events').EventEmitter\n\nmodule.exports = function (CustomEmitter) {\n  var Emitter = CustomEmitter || BuiltInEmitter\n  var emit = Emitter.prototype.emit\n\n  function onevent (packet) {\n    var args = packet.data || []\n    if (packet.id != null) {\n      args.push(this.ack(packet.id))\n    }\n    emit.call(this, '*', packet)\n    return emit.apply(this, args)\n  }\n\n  return function (socket, next) {\n    if (socket.onevent !== onevent) {\n      socket.onevent = onevent\n    }\n    return next ? next() : null\n  }\n}\n"]},"metadata":{},"sourceType":"script"}