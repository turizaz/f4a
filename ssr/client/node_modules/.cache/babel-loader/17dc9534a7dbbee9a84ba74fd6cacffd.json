{"ast":null,"code":"import axios from'../libs/axios';import io from'socket.io-client';const patch=require('socketio-wildcard')(io.Manager);class GameService{constructor(){this._gameSocket=void 0;}add(game){game.date=game.date.format().split('+')[0]+'+0000';return axios.post(\"/game\",game);}initChat(id){return new Promise(resolve=>{this._gameSocket=io({path:\"/chat/game\"});patch(this._gameSocket);this._gameSocket.on('connect',()=>{this._gameSocket.emit('join',\"game\".concat(id),resolve(this._gameSocket));});});}destroyChat(){this._gameSocket.disconnect();}addChatMessage(message){return axios.post(\"/game/chat\",message);}getChatHistory(gameId){return axios.get(\"/game/chat/history/\".concat(gameId));}joinGame(gameId,playerNumber){return axios.post(\"/game/join\",{gameId,playerNumber});}}export default GameService;","map":{"version":3,"sources":["/Users/yaroslavudodov/Code/f4e/ssr/client/src/services/game.ts"],"names":["axios","io","patch","require","Manager","GameService","_gameSocket","add","game","date","format","split","post","initChat","id","Promise","resolve","path","on","emit","destroyChat","disconnect","addChatMessage","message","getChatHistory","gameId","get","joinGame","playerNumber"],"mappings":"AAAA,MAAOA,CAAAA,KAAP,KAAkB,eAAlB,CAEA,MAAOC,CAAAA,EAAP,KAAe,kBAAf,CACA,KAAMC,CAAAA,KAAK,CAAGC,OAAO,CAAC,mBAAD,CAAP,CAA6BF,EAAE,CAACG,OAAhC,CAAd,CAEA,KAAMC,CAAAA,WAAY,oBAERC,WAFQ,SAIhBC,GAAG,CAACC,IAAD,CAA4C,CAC7CA,IAAI,CAACC,IAAL,CAAYD,IAAI,CAACC,IAAL,CAAUC,MAAV,GAAmBC,KAAnB,CAAyB,GAAzB,EAA8B,CAA9B,EAAiC,OAA7C,CACA,MAAOX,CAAAA,KAAK,CAACY,IAAN,SAAoBJ,IAApB,CAAP,CACD,CAEDK,QAAQ,CAACC,EAAD,CAA6C,CACnD,MAAO,IAAIC,CAAAA,OAAJ,CAAaC,OAAD,EAAa,CAC9B,KAAKV,WAAL,CAAmBL,EAAE,CAAC,CAACgB,IAAI,aAAL,CAAD,CAArB,CACAf,KAAK,CAAC,KAAKI,WAAN,CAAL,CACA,KAAKA,WAAL,CAAiBY,EAAjB,CAAoB,SAApB,CAA+B,IAAM,CACnC,KAAKZ,WAAL,CAAiBa,IAAjB,CAAsB,MAAtB,eAAqCL,EAArC,EAA2CE,OAAO,CAAC,KAAKV,WAAN,CAAlD,EACD,CAFD,EAGD,CANM,CAAP,CAOD,CAEDc,WAAW,EAAG,CACZ,KAAKd,WAAL,CAAiBe,UAAjB,GACD,CAEDC,cAAc,CAACC,OAAD,CAAe,CAC3B,MAAOvB,CAAAA,KAAK,CAACY,IAAN,cAAyBW,OAAzB,CAAP,CACD,CAEDC,cAAc,CAACC,MAAD,CAAiB,CAC7B,MAAOzB,CAAAA,KAAK,CAAC0B,GAAN,8BAAgCD,MAAhC,EAAP,CACD,CAEDE,QAAQ,CAACF,MAAD,CAAiBG,YAAjB,CAAuC,CAC7C,MAAO5B,CAAAA,KAAK,CAACY,IAAN,cAAyB,CAACa,MAAD,CAASG,YAAT,CAAzB,CAAP,CACD,CAjCe,CAmClB,cAAevB,CAAAA,WAAf","sourcesContent":["import axios from '../libs/axios'\nimport {AxiosPromise} from 'axios'\nimport io from 'socket.io-client'\nconst patch = require('socketio-wildcard')(io.Manager)\n\nclass GameService {\n\n  private _gameSocket!: SocketIOClient.Socket;\n\n  add(game: any): AxiosPromise<{status: number}> {\n    game.date = game.date.format().split('+')[0]+'+0000'\n    return axios.post(`/game`, game)\n  }\n\n  initChat(id: number): Promise<SocketIOClient.Socket> {\n    return new Promise((resolve) => {\n      this._gameSocket = io({path: `/chat/game`})\n      patch(this._gameSocket)\n      this._gameSocket.on('connect', () => {\n        this._gameSocket.emit('join', `game${id}`, resolve(this._gameSocket))\n      })\n    })\n  }\n\n  destroyChat() {\n    this._gameSocket.disconnect()\n  }\n\n  addChatMessage(message: any) {\n    return axios.post(`/game/chat`, message)\n  }\n\n  getChatHistory(gameId: number) {\n    return axios.get(`/game/chat/history/${gameId}`)\n  }\n\n  joinGame(gameId: number, playerNumber: number) {\n    return axios.post(`/game/join`, {gameId, playerNumber})\n  }\n}\nexport default GameService\n"]},"metadata":{},"sourceType":"module"}