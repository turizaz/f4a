{"ast":null,"code":"/* eslint-disable no-invalid-this */import*as React from'react';import'./set-city-widget.scss';import CityPicker from'../../../components/common/city-picker';import{connect}from'react-redux';import{setCity}from'../../../ac/location';/**\n * Set city on which all further game sessions will be based on\n */class SetCityWidget extends React.Component{constructor(...args){super(...args);this.resetCity=()=>{const setCity=this.props.setCity;setCity(null);};this.setCity=city=>{const setCity=this.props.setCity;setCity(city);};}componentDidMount(){const strLocation=localStorage.getItem('location');if(!strLocation){return;}const setCity=this.props.setCity;try{// @ts-ignore\nsetCity(JSON.parse(localStorage.getItem('location')));}catch(e){console.error(e);}}render(){return/*#__PURE__*/React.createElement(\"div\",{className:\"city-widget\"},this.props.location.id?/*#__PURE__*/React.createElement(\"span\",{onClick:this.resetCity,className:\"city-name shadow-1\"},this.props.location.name):/*#__PURE__*/React.createElement(\"div\",{className:\"table-city-picker shadow-1\"},/*#__PURE__*/React.createElement(CityPicker,{doChoice:this.setCity})));}}export default connect(state=>{return{location:state.location};},{setCity})(SetCityWidget);","map":{"version":3,"sources":["/Users/yaroslavudodov/Code/f4e/ssr/client/src/components/common/set-city-widget/set-city-widget.tsx"],"names":["React","CityPicker","connect","setCity","SetCityWidget","Component","resetCity","props","city","componentDidMount","strLocation","localStorage","getItem","JSON","parse","e","console","error","render","location","id","name","state"],"mappings":"AAAA,oCACA,MAAO,GAAKA,CAAAA,KAAZ,KAAuB,OAAvB,CACA,MAAO,wBAAP,CACA,MAAOC,CAAAA,UAAP,KAAuB,wCAAvB,CACA,OAAQC,OAAR,KAAsB,aAAtB,CACA,OAAQC,OAAR,KAAsB,sBAAtB,CAMA;;GAGA,KAAMC,CAAAA,aAAN,QAA4BJ,CAAAA,KAAK,CAACK,SAAiB,0CAejDC,SAfiD,CAerC,IAAM,MACTH,CAAAA,OADS,CACE,KAAKI,KADP,CACTJ,OADS,CAEhBA,OAAO,CAAC,IAAD,CAAP,CACD,CAlBgD,MAoBjDA,OApBiD,CAoBtCK,IAAD,EAAe,MAChBL,CAAAA,OADgB,CACL,KAAKI,KADA,CAChBJ,OADgB,CAEvBA,OAAO,CAACK,IAAD,CAAP,CACD,CAvBgD,EAEjDC,iBAAiB,EAAG,CAClB,KAAMC,CAAAA,WAAW,CAAGC,YAAY,CAACC,OAAb,CAAqB,UAArB,CAApB,CACA,GAAI,CAACF,WAAL,CAAkB,CAChB,OACD,CAJiB,KAKXP,CAAAA,OALW,CAKA,KAAKI,KALL,CAKXJ,OALW,CAMlB,GAAI,CACF;AACAA,OAAO,CAACU,IAAI,CAACC,KAAL,CAAWH,YAAY,CAACC,OAAb,CAAqB,UAArB,CAAX,CAAD,CAAP,CACD,CAAC,MAAOG,CAAP,CAAU,CACVC,OAAO,CAACC,KAAR,CAAcF,CAAd,EACD,CACF,CAWDG,MAAM,EAAG,CACP,mBACE,2BAAK,SAAS,CAAC,aAAf,EACG,KAAKX,KAAL,CAAWY,QAAX,CAAoBC,EAApB,cACC,4BAAM,OAAO,CAAE,KAAKd,SAApB,CAA+B,SAAS,CAAC,oBAAzC,EACG,KAAKC,KAAL,CAAWY,QAAX,CAAoBE,IADvB,CADD,cAKC,2BAAK,SAAS,CAAC,4BAAf,eACE,oBAAC,UAAD,EAAY,QAAQ,CAAE,KAAKlB,OAA3B,EADF,CANJ,CADF,CAaD,CAvCgD,CA0CnD,cAAeD,CAAAA,OAAO,CACjBoB,KAAD,EAA4B,CAC1B,MAAO,CACLH,QAAQ,CAAEG,KAAK,CAACH,QADX,CAAP,CAGD,CALiB,CAMlB,CAAChB,OAAD,CANkB,CAAP,CAObC,aAPa,CAAf","sourcesContent":["/* eslint-disable no-invalid-this */\nimport * as React from 'react'\nimport './set-city-widget.scss'\nimport CityPicker from '../../../components/common/city-picker'\nimport {connect} from 'react-redux'\nimport {setCity} from '../../../ac/location'\n\ninterface Props {\n  setCity: any,\n  location: any\n}\n/**\n * Set city on which all further game sessions will be based on\n */\nclass SetCityWidget extends React.Component<Props> {\n\n  componentDidMount() {\n    const strLocation = localStorage.getItem('location');\n    if (!strLocation) {\n      return\n    }\n    const {setCity} = this.props\n    try {\n      // @ts-ignore\n      setCity(JSON.parse(localStorage.getItem('location')));\n    } catch (e) {\n      console.error(e)\n    }\n  }\n  resetCity = () => {\n    const {setCity} = this.props;\n    setCity(null);\n  };\n\n  setCity = (city: any) => {\n    const {setCity} = this.props;\n    setCity(city)\n  };\n\n  render() {\n    return (\n      <div className=\"city-widget\">\n        {this.props.location.id ? (\n          <span onClick={this.resetCity} className=\"city-name shadow-1\">\n            {this.props.location.name}\n          </span>\n        ) : (\n          <div className=\"table-city-picker shadow-1\">\n            <CityPicker doChoice={this.setCity}/>\n          </div>\n        )}\n      </div>\n    )\n  }\n}\n\nexport default connect(\n    (state: {location: any}) => {\n      return {\n        location: state.location,\n      };\n    },\n    {setCity}\n)(SetCityWidget)\n"]},"metadata":{},"sourceType":"module"}