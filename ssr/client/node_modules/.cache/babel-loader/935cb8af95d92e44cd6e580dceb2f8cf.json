{"ast":null,"code":"import{Record}from'immutable';import{LOAD_GAME,SUCCESS,START,PLAYER_JOINED}from'../constants';const GameRecord=Record({id:null,city:null,address:null,lat:null,district:null,long:null,players:0,city_id:0,active_players:1,date:null,additional:null,loading:false,fieldNumbersInGame:[]});const defaultState=new GameRecord();export default((gameState=defaultState,action)=>{const type=action.type,payload=action.payload;switch(type){case LOAD_GAME+START:return gameState.set('loading',true);case LOAD_GAME+SUCCESS:return gameState.merge(payload.data).set('loading',false);case PLAYER_JOINED:const gameId=payload.gameId,activePlayers=payload.activePlayers,info=payload.info;if(gameState.get('id')===gameId){if(info.event==='joined'){return joinGame(gameState,info);}if(info.event==='leaved'){return leaveGame(gameState,info);}return gameState.set('active_players',activePlayers).set('fieldNumbersInGame',info.fieldNumbersInGame);}return gameState;default:return gameState;}});/**\n * @param {object} gameState\n * @param {number} playerFieldNumber\n * @return {object}\n */function leaveGame(gameState,{fieldNumbersInGame}){return gameState.set('fieldNumbersInGame',fieldNumbersInGame);}/**\n * @param {object} gameState\n * @param {number} playerFieldNumber\n * @return {*}\n */function joinGame(gameState,{fieldNumbersInGame}){return gameState.set('fieldNumbersInGame',fieldNumbersInGame);}","map":{"version":3,"sources":["/Users/yaroslavudodov/Code/f4e/ssr/client/src/reducer/game.ts"],"names":["Record","LOAD_GAME","SUCCESS","START","PLAYER_JOINED","GameRecord","id","city","address","lat","district","long","players","city_id","active_players","date","additional","loading","fieldNumbersInGame","defaultState","gameState","action","type","payload","set","merge","data","gameId","activePlayers","info","get","event","joinGame","leaveGame"],"mappings":"AAAA,OAAQA,MAAR,KAAqB,WAArB,CACA,OAAQC,SAAR,CAAmBC,OAAnB,CAA4BC,KAA5B,CAAmCC,aAAnC,KAAuD,cAAvD,CAEA,KAAMC,CAAAA,UAAU,CAAGL,MAAM,CAAC,CACxBM,EAAE,CAAE,IADoB,CAExBC,IAAI,CAAE,IAFkB,CAGxBC,OAAO,CAAE,IAHe,CAIxBC,GAAG,CAAE,IAJmB,CAKxBC,QAAQ,CAAE,IALc,CAMxBC,IAAI,CAAE,IANkB,CAOxBC,OAAO,CAAE,CAPe,CAQxBC,OAAO,CAAE,CARe,CASxBC,cAAc,CAAE,CATQ,CAUxBC,IAAI,CAAE,IAVkB,CAWxBC,UAAU,CAAE,IAXY,CAYxBC,OAAO,CAAE,KAZe,CAaxBC,kBAAkB,CAAE,EAbI,CAAD,CAAzB,CAgBA,KAAMC,CAAAA,YAAY,CAAG,GAAId,CAAAA,UAAJ,EAArB,CAEA,eAAe,CAACe,SAAS,CAAGD,YAAb,CAA2BE,MAA3B,GAA2C,MACjDC,CAAAA,IADiD,CAChCD,MADgC,CACjDC,IADiD,CAC3CC,OAD2C,CAChCF,MADgC,CAC3CE,OAD2C,CAExD,OAAQD,IAAR,EACE,IAAKrB,CAAAA,SAAS,CAAGE,KAAjB,CACE,MAAOiB,CAAAA,SAAS,CAACI,GAAV,CAAc,SAAd,CAAyB,IAAzB,CAAP,CACF,IAAKvB,CAAAA,SAAS,CAAGC,OAAjB,CACE,MAAOkB,CAAAA,SAAS,CAACK,KAAV,CAAgBF,OAAO,CAACG,IAAxB,EAA8BF,GAA9B,CAAkC,SAAlC,CAA6C,KAA7C,CAAP,CACF,IAAKpB,CAAAA,aAAL,MACSuB,CAAAA,MADT,CACwCJ,OADxC,CACSI,MADT,CACiBC,aADjB,CACwCL,OADxC,CACiBK,aADjB,CACgCC,IADhC,CACwCN,OADxC,CACgCM,IADhC,CAEE,GAAIT,SAAS,CAACU,GAAV,CAAc,IAAd,IAAwBH,MAA5B,CAAoC,CAClC,GAAIE,IAAI,CAACE,KAAL,GAAe,QAAnB,CAA6B,CAC3B,MAAOC,CAAAA,QAAQ,CAACZ,SAAD,CAAYS,IAAZ,CAAf,CACD,CACD,GAAIA,IAAI,CAACE,KAAL,GAAe,QAAnB,CAA6B,CAC3B,MAAOE,CAAAA,SAAS,CAACb,SAAD,CAAYS,IAAZ,CAAhB,CACD,CACD,MAAOT,CAAAA,SAAS,CACXI,GADE,CACE,gBADF,CACoBI,aADpB,EAEFJ,GAFE,CAEE,oBAFF,CAEwBK,IAAI,CAACX,kBAF7B,CAAP,CAGD,CACD,MAAOE,CAAAA,SAAP,CACF,QACE,MAAOA,CAAAA,SAAP,CApBJ,CAsBD,CAxBD,EA0BA;;;;GAKA,QAASa,CAAAA,SAAT,CAAmBb,SAAnB,CAAmC,CAACF,kBAAD,CAAnC,CAA8D,CAC5D,MAAOE,CAAAA,SAAS,CAACI,GAAV,CAAc,oBAAd,CAAoCN,kBAApC,CAAP,CACD,CACD;;;;GAKA,QAASc,CAAAA,QAAT,CAAkBZ,SAAlB,CAAkC,CAACF,kBAAD,CAAlC,CAA6D,CAC3D,MAAOE,CAAAA,SAAS,CAACI,GAAV,CAAc,oBAAd,CAAoCN,kBAApC,CAAP,CACD","sourcesContent":["import {Record} from 'immutable';\nimport {LOAD_GAME, SUCCESS, START, PLAYER_JOINED} from '../constants';\n\nconst GameRecord = Record({\n  id: null,\n  city: null,\n  address: null,\n  lat: null,\n  district: null,\n  long: null,\n  players: 0,\n  city_id: 0,\n  active_players: 1,\n  date: null,\n  additional: null,\n  loading: false,\n  fieldNumbersInGame: [],\n});\n\nconst defaultState = new GameRecord();\n\nexport default (gameState = defaultState, action: any) => {\n  const {type, payload} = action;\n  switch (type) {\n    case LOAD_GAME + START:\n      return gameState.set('loading', true)\n    case LOAD_GAME + SUCCESS:\n      return gameState.merge(payload.data).set('loading', false)\n    case PLAYER_JOINED:\n      const {gameId, activePlayers, info} = payload\n      if (gameState.get('id') === gameId) {\n        if (info.event === 'joined') {\n          return joinGame(gameState, info)\n        }\n        if (info.event === 'leaved') {\n          return leaveGame(gameState, info)\n        }\n        return gameState\n            .set('active_players', activePlayers)\n            .set('fieldNumbersInGame', info.fieldNumbersInGame)\n      }\n      return gameState;\n    default:\n      return gameState;\n  }\n};\n\n/**\n * @param {object} gameState\n * @param {number} playerFieldNumber\n * @return {object}\n */\nfunction leaveGame(gameState: any, {fieldNumbersInGame}: any) {\n  return gameState.set('fieldNumbersInGame', fieldNumbersInGame);\n}\n/**\n * @param {object} gameState\n * @param {number} playerFieldNumber\n * @return {*}\n */\nfunction joinGame(gameState: any, {fieldNumbersInGame}: any) {\n  return gameState.set('fieldNumbersInGame', fieldNumbersInGame)\n}\n"]},"metadata":{},"sourceType":"module"}