{"ast":null,"code":"import axios from'../libs/axios';/**\n * Service for working with cities\n */class CityService{getCities(city){if(city){return axios.get(\"/cities/getByName/\".concat(city)).then(res=>res.data);}return new Promise(resolve=>{resolve([]);});}}export default CityService;","map":{"version":3,"sources":["/Users/yaroslavudodov/Code/f4e/ssr/client/src/services/city.ts"],"names":["axios","CityService","getCities","city","get","then","res","data","Promise","resolve"],"mappings":"AAAA,MAAOA,CAAAA,KAAP,KAAkB,eAAlB,CAEA;;GAGA,KAAMC,CAAAA,WAAY,CAEhBC,SAAS,CAACC,IAAD,CAAY,CACnB,GAAIA,IAAJ,CAAU,CACR,MAAOH,CAAAA,KAAK,CAACI,GAAN,6BAA+BD,IAA/B,GAAuCE,IAAvC,CAA6CC,GAAD,EAASA,GAAG,CAACC,IAAzD,CAAP,CACD,CACD,MAAO,IAAIC,CAAAA,OAAJ,CAAaC,OAAD,EAAa,CAC9BA,OAAO,CAAC,EAAD,CAAP,CACD,CAFM,CAAP,CAGD,CATe,CAYlB,cAAeR,CAAAA,WAAf","sourcesContent":["import axios from '../libs/axios'\n\n/**\n * Service for working with cities\n */\nclass CityService {\n\n  getCities(city: any) {\n    if (city) {\n      return axios.get(`/cities/getByName/${city}`).then((res) => res.data)\n    }\n    return new Promise((resolve) => {\n      resolve([])\n    })\n  }\n}\n\nexport default CityService\n"]},"metadata":{},"sourceType":"module"}