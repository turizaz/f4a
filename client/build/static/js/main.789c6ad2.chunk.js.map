{"version":3,"sources":["constants.ts","utils/setAuthorizationToken.ts","ac/auth.ts","components/header/login-widget/login-widget.tsx","components/header/login-widget/index.tsx","components/header/index.tsx","components/header/header.tsx","components/common/city-picker/set-city-item/set-city-item.tsx","components/common/city-picker/set-city-item/index.tsx","context/city-service-context/city-service-context.ts","hoc-helpers/with-city-service.tsx","context/game-service-context/game-service-context.ts","hoc-helpers/with-game-service.tsx","components/common/city-picker/index.tsx","components/common/city-picker/city-picker.tsx","components/common/messages/error-message/error-message.tsx","components/common/messages/error-message/index.tsx","components/game-form/games-list/game-item/game-item.tsx","components/game-form/games-list/game-item/index.tsx","components/common/input-barrette/index.tsx","components/common/input-barrette/input-barrette.tsx","components/game-form/games-list/games-list.tsx","components/game-form/games-list/index.tsx","components/common/date-time/date-time.tsx","components/common/date-time/index.tsx","ac/location.ts","ac/games.ts","components/common/set-city-widget/set-city-widget.tsx","components/common/set-city-widget/index.tsx","components/game-form/game-form.tsx","components/game-form/index.tsx","components/auth/login/login.tsx","components/auth/login/index.tsx","components/game/teems-vs-flags/index.tsx","components/game/teems-vs-flags/teems-vs-flags.tsx","components/game/chat/chat-message/index.tsx","components/game/chat/chat-message/chat-message.tsx","components/game/chat/chat.tsx","components/game/chat/index.tsx","components/game/field-player/field-player.tsx","components/game/field-player/index.tsx","services/teems.ts","components/game/football-field/football-field.tsx","components/game/football-field/index.tsx","components/game/game.tsx","components/game/index.tsx","components/about/index.tsx","components/about/about.tsx","components/auth/registration/registration.tsx","components/auth/registration/index.tsx","components/auth/complete-registration/index.tsx","components/auth/complete-registration/complete-registration.tsx","App.tsx","reducer/auth.ts","reducer/location.ts","helpers/helpers.ts","reducer/games.ts","reducer/game.ts","reducer/game-chat.ts","reducer/index.ts","store/index.ts","middlewares/api.ts","services/city.ts","services/game.ts","sockets.ts","index.tsx"],"names":["SUCCESS","setAuthorizationToken","token","axios","defaults","headers","common","setCurrentUser","user","type","decodeToken","localStorage","setItem","jwt","decode","baseURL","LoginWidget","this","props","auth","logout","isAuthenticated","className","name","onClick","Link","to","React","Component","connect","state","dispatch","removeItem","Header","toggleMenu","mainMenu","document","getElementById","style","visibility","closeMenu","id","window","location","pathname","SetCityItem","country","doChoice","composeAddress","region","value","delimiter","createContext","CityServiceProvider","Provider","CityServiceConsumer","Consumer","withCityService","WrappedComponent","cityService","GameServiceProvider","GameServiceConsumer","withGameService","gameService","CityPicker","cities","city","loading","handleChange","event","a","target","setState","length","getCities","pickerDoChoice","nextProps","autoComplete","placeholder","onChange","map","key","ErrorMessage","message","GameItem","click","history","push","item","address","additional","district","date","players","activePlayers","title","Date","toISOString","slice","replace","withRouter","InputBarrette","e","GamesList","filterDistrict","games","console","log","entities","valueSeq","size","it","toLowerCase","indexOf","moment","locale","materialTheme","createMuiTheme","typography","useNextVariants","palette","primary","green","DateTimeComponent","handleDateChange","utils","MomentUtils","theme","okLabel","cancelLabel","ampm","setCity","JSON","stringify","callApi","loadGames","payload","LOAD_GAMES","data","SetCityWidget","resetCity","getItem","parse","initialState","city_id","lat","long","setHours","getHours","errors","GameForm","validate","i","changeDate","onSubmit","preventDefault","alert","_","isEmpty","add","status","setMeta","hash","substr","setUser","game","info","Login","email","password","backendErrors","login","then","err","Validator","isEmail","thickness","htmlFor","credentials","Promise","resolve","reject","post","res","catch","response","TeemsVsFlags","alignUiFlags","widthFirstTeem","getElementsByClassName","offsetWidth","borderRight","ChatMessage","text","username","Chat","maintainSocketMessages","socket","addChatMessage","loadChatHistory","on","sendMessage","keyCode","trim","submit","gameId","initChat","getChatHistory","pick","gameChat","onKeyUp","bind","messages","FieldPlayer","applyGame","index","joinGame","teem","gameRedux","isActive","fieldNumbersInGame","activeShirt","alt","src","Teems","randomInt","min","max","Math","floor","random","tacticOrders","2","3","4","5","6","7","8","9","10","11","isNaN","Error","oddPlayers","evenPlayers","teems","splitOnTeems","orders","forEach","order","Array","isArray","FootballField","gameOrder","generateLines","lines","total","teemsOnField","row","rowNum","prevState","formGameOrder","library","faFutbol","Game","params","match","loadGame","About","width","height","frameBorder","allow","allowFullScreen","Registration","repeatPassword","registrationData","registration","CompleteRegistration","App","Route","path","exact","component","pickUser","Record","arrToMap","arr","DataRecord","Map","reduce","acc","set","OrderedMap","ReducerState","GameRecord","defaultState","active_players","leaveGame","gameState","MessageRecord","combineReducers","action","merge","update","sortBy","f","get","GAME_ADDED","updateIn","gameRecord","store","setIn","LOAD_GAME","gameChatState","reverse","createStore","reducer","composeWithDevTools","applyMiddleware","thunk","next","rest","getState","error","CityService","patch","require","io","Manager","GameService","_gameSocket","format","split","emit","playerNumber","gameSocket","generalSocket","playerJoined","ReactDOM","render","BrowserRouter"],"mappings":"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","file":"static/js/main.789c6ad2.chunk.js","sourcesContent":["export const START = '_START'\nexport const SUCCESS = '_SUCCESS'\nexport const FAIL = '_FAIL'\n\nexport const SET_CURRENT_USER = 'SET_CURRENT_USER'\nexport const SET_CITY = 'SET_CITY'\n\nexport const LOAD_GAMES = 'LOAD_GAMES'\nexport const LOAD_GAME = 'LOAD_GAME'\nexport const GAME_ADDED = 'GAME_ADDED'\nexport const PLAYER_JOINED = 'PLAYER_JOINED'\nexport const PLAYER_LEAVE = 'PLAYER_LEAVE'\n\nexport const GAME_CHAT_MESSAGE_ADDED = 'GAME_CHAT_MESSAGE_ADDED'\nexport const GAME_CHAT_MESSAGE_HISTORY = 'GAME_CHAT_MESSAGE_HISTORY'\n","import axios from 'axios'\naxios.defaults.baseURL = '/api'\n/**\n * Set bearer token\n * @param {string} token\n */\nexport default function setAuthorizationToken(token: any) {\n  if (token) {\n    axios.defaults.headers.common['Authorization'] = `Bearer ${token}`\n  } else {\n    delete axios.defaults.headers.common['Authorization']\n  }\n}\n","import {SET_CURRENT_USER} from '../constants'\nimport axios from 'axios'\nimport jwt from 'jsonwebtoken'\nimport setAuthorizationToken from '../utils/setAuthorizationToken'\n\n/**\n * Login action\n * @param {object} user\n * @return {object} action\n */\nexport function setCurrentUser(user: any) {\n  return {\n    type: SET_CURRENT_USER,\n    user,\n  };\n}\n\n/**\n * @param {object} credentials\n * @return {function(*=): Promise<any>}\n */\nexport function login(credentials: any) {\n  return (dispatch: any) => {\n    return new Promise((resolve, reject) => {\n      axios.post(`/auth/login-jwt`, credentials).then((res) => {\n        const {token} = res.data\n        const info = decodeToken(token)\n        dispatch(setCurrentUser(info))\n        resolve(info);\n      }).catch((err)=> {\n        reject(err.response)\n      });\n    });\n  };\n}\n/**\n * @param {object} user\n * @return {function(*=): Promise<any>}\n */\nexport function registration(user: any) {\n  return (dispatch: any) => {\n    return new Promise((resolve, reject)=> {\n      axios\n          .post(`/auth/registration`, user)\n          .then((res) => {\n            resolve(res)\n          })\n          .catch((err) => {\n            dispatch(setCurrentUser({}))\n            reject(err.response)\n          });\n    });\n  };\n}\n/**\n * Logout action\n * @return {Function}\n */\nexport function logout() {\n  return (dispatch: any) => {\n    localStorage.removeItem('jwt')\n    setAuthorizationToken(false)\n    dispatch(setCurrentUser({}))\n  };\n}\n\n/**\n * Set user from token\n * @param {string} token\n * @return {Function}\n */\nexport function setUser(token: any) {\n  return (dispatch: any) => {\n    const info = decodeToken(token)\n    console.log('decode token', decodeToken(token))\n    dispatch(setCurrentUser(info))\n  };\n}\n/**\n * Set token to local storage, return user info data\n * @param {string} token\n * @return {Promise<void> | string}\n */\nfunction decodeToken(token: any) {\n  localStorage.setItem('jwt', token)\n  setAuthorizationToken(token)\n  return jwt.decode(token)\n}\n","import React from 'react'\nimport './login-widget.scss'\nimport {Link} from 'react-router-dom'\nimport {connect} from 'react-redux'\nimport {logout} from '../../../ac/auth'\ninterface Props {\n    auth: any,\n    logout: any\n}\n/**\n * Login widget for header\n */\nclass LoginWidget extends React.Component<Props> {\n\n  /**\n   * Login widget for header with markup\n   * @return {string} - html login widget for header\n   */\n  render() {\n    const {auth, logout} = this.props\n    return auth.isAuthenticated ? (\n      <div className=\"absolute-login-widget\">\n        {auth.user.name} <i onClick={logout} className=\"fas fa-sign-out-alt\"/>\n      </div>\n    ) : (\n      <div className=\"absolute-login-widget\">\n        <div>\n          <Link to=\"/login\">Войти</Link>\n        </div>\n        <div>\n          <Link to=\"/registration\">Зарегистрироватся</Link>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default connect((state: any) => {\n  return {\n    auth: state.auth,\n  };\n}, {logout})(LoginWidget)\n","import LoginWidget from './login-widget';\nexport default LoginWidget;\n","import Header from './header';\nexport default Header;\n","import React from 'react';\nimport LoginWidget from './login-widget';\nimport {Link} from 'react-router-dom';\nimport './header.scss';\n\n/**\n * Common header\n */\nclass Header extends React.Component {\n  /**\n   * Toggle main menu\n   */\n  toggleMenu = () => {\n    const mainMenu = document.getElementById('main-menu-ul')\n    // @ts-ignore\n    mainMenu.style.visibility =\n    // @ts-ignore\n      mainMenu.style.visibility === 'hidden' || !mainMenu.style.visibility\n        ? 'visible' : 'hidden'\n  };\n  closeMenu = () => {\n    const mainMenu = document.getElementById('main-menu-ul')\n    // @ts-ignore\n    mainMenu.style.visibility = 'hidden'\n  };\n  /**\n   * Render app general header\n   * @return {string} - HTML markup for the component\n   */\n  render() {\n    return (\n      <nav className=\"main-menu shadow-1\">\n        <div className=\"container\">\n          <div className=\"switcher\" onClick={this.toggleMenu}>\n            <i className=\"fas fa-bars\"/>\n          </div>\n          <ul id=\"main-menu-ul\" onClick={this.closeMenu}>\n            <li className={\n              window.location.pathname === '/' ? 'active' : ''\n            }>\n              <Link to=\"/\">Главная</Link>\n            </li>\n            <li className={\n              window.location.pathname === '/about' ? 'active' : ''}>\n              <Link to=\"/about\">О сервисе</Link>\n            </li>\n          </ul>\n          <LoginWidget/>\n        </div>\n      </nav>\n    );\n  }\n}\n\nexport default Header;\n","import React from 'react'\nimport './set-city-item.scss'\nimport {connect} from 'react-redux'\n\ninterface Props {\n  name?: string,\n  country?: string,\n  region?: string,\n  doChoice: any,\n  id: number,\n}\n\n/**\n * Item for autocomplete list\n */\nclass SetCityItem extends React.Component<Props> {\n  /**\n   * @return {string} html\n   */\n  render() {\n    const {name, country, id, doChoice} = this.props;\n    return (\n      <div className=\"city-item\" onClick={\n        () => {\n          doChoice({name: name, country: country, id: id});\n        }}>\n        { this.composeAddress(this.props.name) }\n        <small>{ this.composeAddress(this.props.region, ', ') }</small>\n        <small>{ this.composeAddress(this.props.country, ', ') }</small>\n      </div>\n    );\n  }\n\n  /**\n   * @param {string} value\n   * @param {string} delimiter\n   * @return {*}\n   */\n  composeAddress(value: any, delimiter = '') {\n    if (!value) return ''\n    return <span>{delimiter + value}</span>\n  }\n}\n\nexport default connect(\n    (state: {location: any}) => {\n      return {\n        location: state.location,\n      }\n    }, null\n)(SetCityItem)\n","import SetCityItem from './set-city-item';\nexport default SetCityItem;\n","import React from 'react'\n\nconst {\n  Provider: CityServiceProvider,\n  Consumer: CityServiceConsumer,\n} = React.createContext(null)\n\nexport {CityServiceConsumer, CityServiceProvider}\n","import React from 'react'\nimport {CityServiceConsumer} from '../context/city-service-context'\n\nconst withCityService = (WrappedComponent: any) => {\n  return function WithCityService(props: any) {\n    return (\n      <CityServiceConsumer>\n        {(cityService) => {\n          return <WrappedComponent {...props} cityService={cityService} />\n        }}\n      </CityServiceConsumer>\n    )\n  }\n}\nexport default withCityService\n","import React from 'react';\n\nconst {\n  Provider: GameServiceProvider,\n  Consumer: GameServiceConsumer,\n} = React.createContext(null);\n\nexport {GameServiceProvider, GameServiceConsumer};\n","import React from 'react'\nimport {GameServiceConsumer} from '../context/game-service-context'\n\nconst withGameService = (WrappedComponent: any) => {\n  return function WithGameService(props: any) {\n    return (\n      <GameServiceConsumer>\n        {(gameService) => {\n          return <WrappedComponent {...props} gameService={gameService} />\n        }}\n      </GameServiceConsumer>\n    )\n  }\n}\nexport default withGameService\n","import CityPicker from './city-picker';\nexport default CityPicker;\n","/* eslint-disable no-invalid-this */\n\nimport React from 'react';\nimport SetCityItem from './set-city-item';\nimport './city-picker.scss';\nimport {withCityService} from '../../../hoc-helpers'\n\ninterface Props {\n  doChoice: any;\n  city: string;\n  cityService: any;\n}\n\n/**\n * Input which select city\n */\nclass CityPicker extends React.Component<Props> {\n  state = {\n    cities: [],\n    city: '',\n    loading: null,\n  };\n  /**\n   * React on user input city\n   * @param {object} event\n   */\n  handleChange = async (event: any) => {\n    const city = event.target.value;\n    this.setState({\n      city,\n    });\n    const {cityService} = this.props;\n    if (city.length > 2) {\n      this.setState({loading: true});\n      const cities = await cityService.getCities(city);\n      this.setState({loading: false});\n      this.setState({\n        cities,\n      });\n    }\n  };\n  /**\n   * Intermediate function to clean list on choice\n   * @param {{name: string, id: number, country: string}} city\n   * @return {Function}\n   */\n  pickerDoChoice = (city: any) => {\n    this.setState({\n      cities: [],\n      city: city.name,\n    });\n    return this.props.doChoice(city);\n  };\n\n  /**\n   * Listen selected value from parent component\n   * @param {object} nextProps\n   */\n  componentWillReceiveProps(nextProps: any) {\n    if (nextProps.city !== this.state.city) {\n      this.setState({city: nextProps.city})\n    }\n  }\n  /**\n   * City input auto complete\n   * @return {string} html\n   */\n  render() {\n    return (\n      <div className=\"city-auto-complete\">\n        <input\n          type=\"text\"\n          className=\"form-control\"\n          value={this.state.city}\n          autoComplete=\"off\"\n          placeholder=\"Город\"\n          onChange={this.handleChange}\n        />\n        {this.state.loading && <div className=\"lds-hourglass\"/>}\n        {this.state.cities.length ? (\n          <div className=\"list\">\n            {this.state.cities.map((city: {id: number}) => {\n              return (\n                <SetCityItem\n                  key={city.id}\n                  {...city}\n                  doChoice={this.pickerDoChoice}\n                />\n              );\n            })}\n          </div>\n        ) : null}\n      </div>\n    );\n  }\n}\n\nexport default withCityService(CityPicker);\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport './error-message.scss'\n/**\n * Common error message component\n * @param {object} props\n * @return {string} html\n */\nfunction ErrorMessage(props: any) {\n  return props.message ? (\n      <div className=\"common-error-message\">{props.message}</div>\n  ) : null\n}\nErrorMessage.propTypes = {\n  message: PropTypes.string,\n};\nexport default ErrorMessage\n","import ErrorMessage from './error-message';\nexport default ErrorMessage;\n","/* eslint-disable no-invalid-this */\nimport React, {Component} from 'react'\nimport './game-item.scss'\nimport {withRouter} from 'react-router-dom'\nimport {RouteComponentProps} from 'react-router-dom'\n\ninterface Props extends RouteComponentProps<any> {\n  history: any,\n  item: any\n}\n/**\n * Game in list\n */\nclass GameItem extends Component<Props> {\n  click = () => {\n    this.props.history.push(`/game/${this.props.item.id}`)\n  };\n\n  /**\n   * Render game in list\n   * @return {*}\n   */\n  render() {\n    const {address, additional, district, date, players, activePlayers}\n    = this.props.item\n    if (!this.props.item) {\n      return null\n    }\n    return (\n      <div\n        onClick={this.click}\n        className=\"game-item\"\n        title={additional}\n      >\n        <div className={'district'}>\n          <div className={'label'}>\n            Район\n          </div>\n          <div>\n            {district}\n          </div>\n        </div>\n        <div className={'address'}>\n          <div className={'label'}>\n            Адресс\n          </div>\n          <div>\n            {address}\n          </div>\n        </div>\n        <div>\n          <div className={'label'}>\n            Время\n          </div>\n          <div>\n            {new Date(date).toISOString().slice(0, 16).replace('T', ' ')}\n          </div>\n        </div>\n        <div>\n          <div className={'label'}>\n            Игроков\n          </div>\n          <div>\n            {activePlayers || 0 } из {players}\n          </div>\n        </div>\n      </div>\n    )\n  }\n}\nexport default withRouter<Props, any>(GameItem)\n","import GameItem from './game-item';\nexport default GameItem;\n","import InputBarrette from './input-barrette';\nexport default InputBarrette;\n","/* eslint-disable no-invalid-this */\nimport React from 'react'\nimport './input-barrette.scss'\n\ninterface Props {\n  onChange: any,\n}\n// Style input\nclass InputBarrette extends React.Component<Props> {\n  onChange = (e: any) => {\n    this.props.onChange(e)\n  }\n\n  render() {\n    return (\n      <div className=\"input-barrette-wrap\">\n        <div className=\"input-barrette shadow-1\">\n          <div>\n            <input\n              type=\"text\"\n              className=\"form-control\"\n              onChange={this.onChange}\n              placeholder=\"район\"/>\n          </div>\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default InputBarrette\n","import React, {Component} from 'react';\nimport {connect} from 'react-redux';\nimport {withGameService} from '../../../hoc-helpers';\nimport GameItem from './game-item';\nimport './games-list.scss';\nimport InputBarrette from '../../../components/common/input-barrette';\ninterface Props {\n  games: any\n}\n/**\n * List of games based on city\n */\nclass GamesList extends Component<Props> {\n  state = {\n    district: null,\n  };\n  /**\n   * @param {Event} e\n   */\n  filterDistrict = (e: any) => {\n    this.setState({\n      district: e.target.value,\n    });\n  };\n  /**\n   * @return {boolean|*}\n   */\n  render() {\n    const {games} = this.props;\n    console.log(games.entities.valueSeq().size)\n    if (!games.entities.valueSeq().size) {\n      return null;\n    }\n    return (\n      <div>\n        <div className=\"head-game-list\">\n          <div className={'district'}>\n            <InputBarrette onChange={this.filterDistrict}/>\n          </div>\n          <div className={'address table-label'}>Адрес</div>\n          <div className={'time table-label'}>Дата</div>\n          <div className={'players table-label'}>Игроков</div>\n        </div>\n        {games.entities.valueSeq().map(\n            (it: any) => {\n              if (\n                this.state.district !== null\n                &&\n                it.district.toLowerCase().indexOf(\n                    // @ts-ignore\n                    this.state.district.toLowerCase()) === -1\n              ) {\n                return null;\n              }\n              return <GameItem key={it.id} item={it} {...it}/>;\n            },\n        )}\n      </div>\n    );\n  }\n}\n\nexport default connect(\n    (state: any) => {\n      return {\n        location: state.location,\n        games: state.games,\n      };\n    },\n    null\n)(withGameService(GamesList));\n","import GamesList from './games-list';\nexport default GamesList;\n","/* eslint-disable no-invalid-this */\nimport React from 'react'\nimport moment from 'moment'\nimport {MuiThemeProvider, createMuiTheme} from '@material-ui/core'\nimport green from '@material-ui/core/colors/green'\nimport './date-time.scss'\nimport MomentUtils from '@date-io/moment'\nimport 'moment/locale/ru'\nimport {\n  DatePicker,\n  TimePicker,\n  MuiPickersUtilsProvider,\n} from 'material-ui-pickers'\nmoment.locale('ru')\n\nconst materialTheme = createMuiTheme({\n  typography: {\n    useNextVariants: true,\n  },\n  palette: {\n    primary: green,\n  },\n});\n\ninterface Props {\n  onChange: any,\n  value: any\n}\n\nclass DateTimeComponent extends React.Component<Props> {\n  handleDateChange = (e: any) => {\n    const {onChange} = this.props\n    onChange(e)\n  };\n\n  /**\n   * Render date time widget\n   * @return {string} html\n   */\n  render() {\n    return (\n      <MuiPickersUtilsProvider utils={MomentUtils}>\n        <MuiThemeProvider theme={materialTheme}>\n          <div className=\"pickers\">\n            <DatePicker\n              className=\"col-6\"\n              okLabel=\"Ок\"\n              cancelLabel=\"Не ок\"\n              value={this.props.value}\n              onChange={this.handleDateChange}\n            />\n            <TimePicker\n              okLabel=\"Ок\"\n              className=\"col-6\"\n              cancelLabel=\"Не ок\"\n              ampm={false}\n              value={this.props.value}\n              onChange={this.handleDateChange}\n            />\n          </div>\n        </MuiThemeProvider>\n      </MuiPickersUtilsProvider>\n    );\n  }\n}\n// DateTimeComponent.propTypes = {\n//   onChange: PropTypes.func.isRequired,\n//   value: PropTypes.any,\n// }\nexport default DateTimeComponent\n","import DateTimeComponent from './date-time';\nexport default DateTimeComponent;\n","import {LOAD_GAMES, SET_CITY, SUCCESS} from '../constants';\nimport {loadGames} from './games';\n/**\n * Set city action\n * @return {{payload: *, type: string}}\n */\nexport function setCity(city: any) {\n  if (!city) {\n    return (dispatch: any) => {\n      localStorage.setItem('location', '')\n      dispatch({type: LOAD_GAMES+SUCCESS, payload: {data: null}})\n      dispatch({\n        type: SET_CITY,\n        payload: city,\n      })\n    }\n  }\n  return (dispatch: any) => {\n    localStorage.setItem('location', JSON.stringify(city))\n    dispatch(loadGames(city))\n    dispatch({type: SET_CITY, payload: city})\n  }\n}\n","import {LOAD_GAMES, GAME_ADDED, LOAD_GAME, PLAYER_JOINED, GAME_CHAT_MESSAGE_HISTORY, GAME_CHAT_MESSAGE_ADDED} from '../constants'\nimport {ICallApiAc, ICommonAc} from './IAc'\n\n/**\n * Set city action\n * @param {object} city\n */\nexport function loadGames(city: any): ICallApiAc {\n  return {\n    type: LOAD_GAMES,\n    callApi: `/game/city/${city.id}`,\n  };\n}\n/**\n * Load game\n */\nexport function loadGame(id: number): ICallApiAc {\n  return {\n    type: LOAD_GAME,\n    callApi: `/game/${id}`,\n  };\n}\n/**\n * Game added event\n */\nexport function gameAdded(id: number): ICallApiAc {\n  return {\n    type: GAME_ADDED,\n    callApi: `/game/${id}`,\n  };\n}\n\nexport function playerJoined(\n    gameId: number,\n    activePlayers: number,\n    info: any): ICommonAc {\n  return {\n    type: PLAYER_JOINED,\n    payload: {gameId, activePlayers, info},\n  };\n}\n\nexport function addChatMessage(message: any) {\n  return {\n    type: GAME_CHAT_MESSAGE_ADDED,\n    payload: message,\n  };\n}\n\nexport function loadChatHistory(messages: any) {\n  return {\n    type: GAME_CHAT_MESSAGE_HISTORY,\n    payload: messages,\n  };\n}\n","/* eslint-disable no-invalid-this */\nimport React from 'react'\nimport './set-city-widget.scss'\nimport CityPicker from '../../../components/common/city-picker'\nimport {connect} from 'react-redux'\nimport {setCity} from '../../../ac/location'\n\ninterface Props {\n  setCity: any,\n  location: any\n}\n/**\n * Set city on which all further game sessions will be based on\n */\nclass SetCityWidget extends React.Component<Props> {\n  /**\n   * Init location\n   */\n  componentDidMount() {\n    const strLocation = localStorage.getItem('location');\n    if (!strLocation) {\n      return\n    }\n    const {setCity} = this.props\n    try {\n      // @ts-ignore\n      setCity(JSON.parse(localStorage.getItem('location')));\n    } catch (e) {\n    }\n  }\n  resetCity = () => {\n    const {setCity} = this.props;\n    setCity(null);\n  };\n  /**\n   * Set City\n   * @param {{name: string, id: number, country: string}}city\n   */\n  setCity = (city: any) => {\n    const {setCity} = this.props;\n    setCity(city);\n  };\n  /**\n   * Main view for widget\n   *  @return {string} - html\n   */\n  render() {\n    return (\n      <div className=\"city-widget\">\n        {this.props.location.id ? (\n          <span onClick={this.resetCity} className=\"city-name shadow-1\">\n            {this.props.location.name}\n          </span>\n        ) : (\n          <div className=\"table-city-picker shadow-1\">\n            <CityPicker doChoice={this.setCity}/>\n          </div>\n        )}\n      </div>\n    )\n  }\n}\n\nexport default connect(\n    (state: {location: any}) => {\n      return {\n        location: state.location,\n      };\n    },\n    {setCity}\n)(SetCityWidget)\n","import SetCityWidget from './set-city-widget';\nexport default SetCityWidget;\n","/* eslint-disable no-invalid-this */\n\nimport React from 'react'\nimport './game-form.scss'\nimport CityPicker from '../../components/common/city-picker'\nimport ErrorMessage from '../../components/common/messages/error-message'\nimport _ from 'lodash'\nimport {withGameService} from '../../hoc-helpers'\nimport GamesList from './games-list'\nimport {connect} from 'react-redux'\nimport DateTimeComponent from '../../components/common/date-time'\nimport SetCityWidget from '../../components/common/set-city-widget'\nimport {setCity} from '../../ac/location'\nimport {setUser} from '../../ac/auth'\nimport moment from 'moment'\n\nmoment.locale('ru')\nconst initialState = {\n  data: {\n    city: '',\n    city_id: '',\n    address: '',\n    lat: '',\n    long: '',\n    additional: '',\n    players: 6,\n    date: moment(new Date().setHours(new Date().getHours() + 4)),\n    district: '',\n  },\n  errors: {},\n}\n\ninterface Props {\n  gameService: any,\n  auth: any,\n  location: any,\n  setCity: any,\n  setUser: any,\n  match: any,\n}\n/**\n * Form for adding game event\n */\nclass GameForm extends React.Component<Props> {\n  state: {data: any, errors: any}\n  /**\n   * Set initial state\n   * @param {object} props\n   */\n  constructor(props: any) {\n    super(props);\n    GameForm.setMeta();\n    this.state = initialState;\n  }\n  static setMeta() {\n    document.title = 'Football for everyone';\n  }\n  /**\n   * Did mount hook\n   */\n  componentDidMount() {\n    const hash = window.location.hash.substr(1);\n    if (hash) {\n      const {setUser} = this.props;\n      setUser(hash);\n    }\n  };\n  /**\n   * Set city\n   * @param {{name: string, id: number, country: string}} city\n   */\n  setCity = (city: any) => {\n    this.setState({\n      data: {...this.state.data, city: city.name, city_id: city.id},\n    })\n  };\n  /**\n   * Handle all simple text inputs\n   * @param {object} e\n   * @return {void}\n   */\n  onChange = (e: any) => {\n    this.setState({\n      data: {...this.state.data, [e.target.name]: e.target.value},\n    });\n  };\n  /**\n   * Form validation\n   * @param {object} data\n   * @return {object}\n   */\n  validate = (data: any) => {\n    const errors:any = {};\n    for (const i in data) {\n      if (['players', 'lat', 'long', 'additional'].indexOf(i) !== -1) {\n        continue;\n      }\n      if (!data[i]) errors[i] = `Не может быть пустым`;\n    }\n    return errors;\n  };\n  /**\n   * @param {Event} e\n   * Change date\n   */\n  changeDate = (e: any) => {\n    this.setState({\n      data: {\n        ...this.state.data,\n        date: e,\n      },\n    });\n  };\n  /**\n   * @param {object} e\n   */\n  onSubmit = async (e: any) => {\n    e.preventDefault()\n    const {auth, setCity} = this.props\n    if (!auth.isAuthenticated) {\n      alert('Зарегистрируйтесь чтобы создать игру')\n      return\n    }\n    const {data} = this.state;\n    setCity({name: data.city, id: data.city_id});\n    const errors = this.validate(data);\n    this.setState({\n      errors,\n    });\n    if (_.isEmpty(errors)) {\n      const {gameService} = this.props;\n      const res = await gameService.add(data)\n      if (res.status === 201) {\n        this.setState(initialState)\n      }\n    }\n  };\n  /**\n   * Render form for adding game event\n   * @return {string} - HTML markup for the component\n   */\n  render() {\n    const {auth} = this.props;\n    const {data, errors} = this.state;\n    return (\n      <div className=\"row\">\n        <div className=\"col-6 col-md-3 left-col\">\n          <form className=\n            {'game-form' + (auth.isAuthenticated ? ' active': ' passive')}\n          onSubmit={this.onSubmit}>\n            <fieldset>\n              <legend>Добавить игру.</legend>\n              <div className=\"form-group\" id=\"gameCitySection\">\n                <label>Город</label>\n                <CityPicker\n                  doChoice={this.setCity}\n                  city={this.state.data.city}\n                />\n                {errors.city && <ErrorMessage message={errors.city} />}\n              </div>\n              <div className=\"form-group\">\n                <label>Район.</label>\n                <input\n                  type=\"text\"\n                  className=\"form-control\"\n                  name=\"district\"\n                  value={data.district}\n                  onChange={this.onChange}\n                />\n                {errors.district && <ErrorMessage message={errors.district} />}\n              </div>\n              <div className=\"form-group\">\n                <label>Адрес</label>\n                <input\n                  type=\"text\"\n                  className=\"form-control\"\n                  name=\"address\"\n                  value={data.address}\n                  onChange={this.onChange}\n                />\n                {errors.address && <ErrorMessage message={errors.address} />}\n              </div>\n              <div className=\"form-group\">\n                <label>Дата</label>\n                <DateTimeComponent\n                  onChange={this.changeDate}\n                  value={data.date}/>\n                {errors.date && <ErrorMessage message={errors.date} />}\n              </div>\n              {false && (\n                <div>\n                  <fieldset>\n                    <legend>Координаты (не обязательно)</legend>\n                    <div className=\"form-row\">\n                      <div className=\"col-6\">\n                        <label>с.ш.</label>\n                        <input\n                          type=\"number\"\n                          className=\"form-control\"\n                          value={data.lat}\n                          name=\"lat\"\n                          onChange={this.onChange}\n                        />\n                        {errors.lat && <ErrorMessage message={errors.lat} />}\n                      </div>\n                      <div className=\"col-6\">\n                        <label>в.д.</label>\n                        <input\n                          type=\"number\"\n                          className=\"form-control\"\n                          name=\"long\"\n                          value={data.long}\n                          onChange={this.onChange}\n                        />\n                        {errors.long && <ErrorMessage message={errors.long} />}\n                      </div>\n                    </div>\n                  </fieldset>\n                </div>\n              )}\n              <div className=\"form-group\">\n                <label>Количество игроков</label>\n                <select\n                  className=\"form-control col-2\"\n                  onChange={this.onChange}\n                  value={data.players}\n                  name=\"players\"\n                >\n                  <option>6</option>\n                  <option>7</option>\n                  <option>8</option>\n                  <option>9</option>\n                  <option>10</option>\n                  <option>11</option>\n                  <option>12</option>\n                  <option>13</option>\n                  <option>14</option>\n                  <option>15</option>\n                  <option>16</option>\n                  <option>17</option>\n                  <option>18</option>\n                  <option>19</option>\n                  <option>20</option>\n                  <option>21</option>\n                  <option>22</option>\n                </select>\n                {errors.players && <ErrorMessage message={errors.players} />}\n              </div>\n            </fieldset>\n            <div className=\"form-group\">\n              <label>Дополнительно</label>\n              <textarea\n                className=\"form-control\"\n                name=\"additional\"\n                value={data.additional}\n                onChange={this.onChange}\n              />\n              {errors.additional && (\n                <ErrorMessage message={errors.additional} />\n              )}\n            </div>\n            <div className=\"form-group\">\n              <button type=\"submit\" className=\"btn submit-btn\">\n                Создать\n              </button>\n            </div>\n          </form>\n        </div>\n        <div className=\"col-12 col-md-9 flex right-col\">\n          <div className=\"width-100\">\n            <SetCityWidget/>\n            <GamesList />\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default connect(\n    (state: {location: any, game: any, auth: any}) => {\n      return {\n        location: state.location,\n        games: state.game,\n        auth: state.auth,\n      };\n    },\n    {setCity, setUser}\n)(withGameService(GameForm))\n","import GameForm from './game-form';\nexport default GameForm;\n","/* eslint-disable no-invalid-this */\nimport React from 'react'\nimport './login.scss'\nimport Validator from 'validator'\nimport ErrorMessage from '../../../components/common/messages/error-message'\nimport _ from 'lodash'\nimport {connect} from 'react-redux'\nimport {login} from '../../../ac/auth'\nimport CircularProgress from '@material-ui/core/CircularProgress'\n\ninterface Props {\n  history: any,\n  login: any\n}\n/**\n * Login component\n */\nclass Login extends React.Component<Props> {\n  state = {\n    data: {\n      email: '',\n      password: '',\n    },\n    loading: false,\n    backendErrors: [],\n    errors: {email: null, password: null},\n  };\n\n  /**\n   * Handle all simple text inputs\n   * @return {void}\n   */\n  onChange = (e: any) => {\n    this.setState({\n      data: {...this.state.data, [e.target.name]: e.target.value},\n    })\n  };\n\n  /**\n   * Submit form\n   * @param {object} e\n   */\n  onSubmit = (e: any) => {\n    const {login} = this.props\n    const {data} = this.state\n    e.preventDefault()\n    const errors = this.validate(data)\n    this.setState({errors})\n    if (_.isEmpty(errors)) {\n      this.setState({loading: true})\n      login(data).then(\n          () => {\n            this.props.history.push('/')\n          },\n          (err: any) => {\n            switch (err.status) {\n              case 401:\n                if (err.data === 'Not verified') {\n                  this.setState({\n                    backendErrors: ['Подтвердите ваш почтовый адресс'],\n                  })\n                } else {\n                  this.setState({\n                    backendErrors: ['Неверный логин или пароль1'],\n                  })\n                }\n                break\n              default:\n                this.setState({\n                  backendErrors: [\n                    'Произошла серверная ощибка, обратитесь к администратору',\n                  ],\n                })\n            }\n          }\n      ).then(()=> {\n        this.setState({loading: false})\n      })\n    }\n  };\n  /**\n   * Form validation\n   */\n  validate = (data: any) => {\n    const errors: {password: any, email: any} = {password: null, email: null}\n    if (!data.password) errors.password = `Не может быть пустым`\n    if (!data.email) errors.email = `Не может быть пустым`\n    if (!Validator.isEmail(data.email)) errors.email = `Не валидный емейл`\n    return errors\n  };\n  /**\n   * Ui for login\n   * @return {string} html\n   */\n  render() {\n    const {data} = this.state;\n    return (\n      <div>\n        {this.state.loading &&\n              <CircularProgress\n                className={'login-spinner'}\n                size={200} thickness={1}/>}\n        <form className=\"\n        col-12\n        col-md-6\n        col-lg-6\n        col-xl-6\n        login-form\" onSubmit={this.onSubmit}>\n          {\n            this.state.backendErrors.map((it) =>\n              <ErrorMessage key={it} message={it}/>)}\n          <div className=\"form-group\">\n            <label htmlFor=\"exampleInputEmail1\">E-mail адрес</label>\n            <input\n              type=\"email\"\n              id=\"email\"\n              name=\"email\"\n              placeholder=\"example@gmail.com\"\n              value={data.email}\n              onChange={this.onChange}\n              className=\"form-control\"\n            />\n            {this.state.errors.email && (\n              <ErrorMessage message={this.state.errors.email} />\n            )}\n            <small className=\"form-text text-muted\">\n              Мы никогда не передадим вашу электронную почту кому-либо еще.\n            </small>\n          </div>\n          <div className=\"form-group\">\n            <label>Пароль</label>\n            <input\n              type=\"password\"\n              id=\"password\"\n              name=\"password\"\n              value={data.password}\n              onChange={this.onChange}\n              className=\"form-control\"\n              placeholder=\"Пароль\"\n            />\n            {this.state.errors.password && (\n              <ErrorMessage message={this.state.errors.password} />\n            )}\n          </div>\n          <div className=\"form-group\">\n            <button type=\"submit\" className=\"btn submit-btn mb-2\">\n              Войти\n            </button>\n          </div>\n        </form>\n      </div>\n    )\n  }\n}\n\nexport default connect(\n    (state: {auth: any}) => ({\n      auth: state.auth,\n    }),\n    {\n      login,\n    }\n)(Login)\n","import Login from './login';\nexport default Login;\n","import TeemsVsFlags from './teems-vs-flags';\nexport default TeemsVsFlags;\n","import React from 'react';\nimport './teems-vs-flags.scss';\n\n/**\n * Teem flags in game widget\n */\nclass TeemsVsFlags extends React.Component {\n  /**\n   * Init\n   */\n  componentDidMount() {\n    this.alignUiFlags()\n  }\n  /**\n   * @return {JSX} html\n   */\n  render() {\n    return (\n      <div className=\"teems-vs-flags\">\n        <div className=\"first-teem\">\n          <div className=\"second-teem\"/>\n        </div>\n      </div>\n    );\n  }\n  /**\n   * Align ui flags\n   */\n  alignUiFlags() {\n    const widthFirstTeem =\n    // @ts-ignore\n      document.getElementsByClassName('first-teem')[0].offsetWidth\n    // @ts-ignore\n    document.getElementsByClassName('second-teem')[0].style.borderRight =\n        widthFirstTeem+'px solid transparent'\n  }\n};\nexport default TeemsVsFlags;\n","import ChatMessage from './chat-message';\nexport default ChatMessage;\n","import React, {Component} from 'react';\nimport './chat-message.scss';\n\ninterface Props {\n    message: {text: string, username: string, date: any}\n}\n\n/**\n * One chat message\n */\nclass ChatMessage extends Component<Props> {\n  /**\n   * @return {JSX}\n   */\n  render() {\n    const {text, username, date} = this.props.message\n    return (\n      <li className=\"chatMessage\">\n        <div className=\"message-data\">\n          <span className=\"message-data-name\">{username}\n          </span>\n          <span className=\"message-data-time\">\n            {new Date(date).toISOString().slice(0, 16).replace('T', ' ')}\n          </span>\n        </div>\n        <div className=\"message my-message\">{text}</div>\n      </li>\n    );\n  }\n}\n\nexport default ChatMessage\n","/* eslint-disable no-invalid-this */\nimport React, {Component} from 'react';\nimport './chat.scss';\nimport ChatMessage from './chat-message';\nimport {connect} from 'react-redux';\nimport {addChatMessage, loadChatHistory} from '../../../ac/games';\nimport _ from 'lodash';\nimport {withGameService} from '../../../hoc-helpers';\n\ninterface Props {\n  gameId: any,\n  addChatMessage: any,\n  loadChatHistory: any,\n  gameService: any,\n  gameChat: any,\n}\n\n/**\n * Game chat\n */\nclass Chat extends Component<Props> {\n  /**\n   * Init, handle socket messages\n   */\n  async componentDidMount() {\n    const {gameService, gameId} = this.props\n    await this.maintainSocketMessages(await gameService.initChat(gameId))\n    await gameService.getChatHistory(gameId)\n  }\n  /**\n   * @param {object} socket\n   * @return {Promise<void>}\n   */\n  maintainSocketMessages = async (socket: any) => {\n    const {addChatMessage, loadChatHistory} = this.props;\n    socket.on('*', (message: any)=> {\n      switch (message.data[0]) {\n        case 'GAME_CHAT_MESSAGE_HISTORY':\n          loadChatHistory(message.data[1])\n          break;\n        case 'GAME_CHAT_MESSAGE_ADDED':\n          addChatMessage(message.data[1])\n          break;\n        default:\n          break;\n      }\n    });\n  };\n  /**\n   * @type {{message: null}}\n   */\n  state = {\n    message: null,\n  };\n  /**\n   * Handle all simple text inputs\n   * @param {object} e\n   * @return {void}\n   */\n  onChange = (e: any) => {\n    this.setState({\n      [e.target.name]: e.target.value,\n    });\n  };\n  /**\n   * @param {Event} e\n   */\n  sendMessage = async (e: any) => {\n    if (e.keyCode !== 13) {\n      return\n    }\n    if (e.target.value.trim() === '') {\n      return\n    }\n    await this.submit()\n  };\n  /**\n   * Submit chat message\n   */\n  async submit() {\n    // @ts-ignore\n    document.getElementById('message').value = null\n    const {gameService, gameId} = this.props;\n    const {message} = _.pick(this.state, ['message']);\n    if (!message) {\n      alert('Нет смысла отправлять пустое сообщение');\n      return;\n    }\n    try {\n      await gameService.addChatMessage({\n        ..._.pick(this.state, ['message']),\n        gameId,\n      });\n      this.setState({\n        message: null,\n      });\n    } catch (error) {\n      if (error.response.status === 403) {\n        alert('Залогинтесь пожалуйста');\n      }\n    }\n  }\n  /**\n   * Render game chat\n   * @return {*}\n   */\n  render() {\n    const {gameChat} = this.props;\n    return (\n      <div className=\"chat\">\n        <hr/>\n        <div className=\"form-group padding-0\">\n          <textarea\n            onChange={this.onChange}\n            className=\"form-control\"\n            name=\"message\"\n            id=\"message\"\n            placeholder=\"Чат\"\n            onKeyUp={this.sendMessage}\n          />\n          <br/>\n          <button\n            className=\"btn submit-btn mb-2\"\n            onClick={this.submit.bind(this)}>Послать сообщение</button>\n        </div>\n        <form>\n          <ul>\n            {gameChat.entities.valueSeq().map(\n                (it: any) => {\n                  return <ChatMessage key={it.id} message={it} />\n                }\n            )}\n          </ul>\n        </form>\n      </div>\n    );\n  }\n}\n\nexport default connect((state: any) => {\n  return {\n    gameChat: state.gameChat,\n  };\n}, {addChatMessage, loadChatHistory})(withGameService(Chat));\n","import Chat from './chat';\nexport default Chat;\n","/* eslint-disable no-invalid-this */\nimport React, {Component} from 'react'\n\nimport './field-player.scss'\nimport {withGameService} from '../../../hoc-helpers'\nimport {connect} from 'react-redux'\ninterface Props {\n  gameService: any,\n  game: any,\n  index: any,\n  gameRedux: any,\n  teem: any\n}\n/**\n * Player ui on football field\n */\nclass FieldPlayer extends Component<Props> {\n  applyGame = () => {\n    const {gameService, game, index} = this.props\n    gameService.joinGame(game.id, index).catch((e: any) => {\n      if (e.response.status === 403) {\n        alert('Залогинтесь сначала')\n      }\n    })\n  };\n  /**\n   * @return {JSX} html\n   */\n  render() {\n    const {teem, index, gameRedux} = this.props;\n    const isActive = gameRedux.fieldNumbersInGame\n      && gameRedux.fieldNumbersInGame.length > 0\n      && gameRedux.fieldNumbersInGame.indexOf(index) !== -1;\n    const activeShirt = '/img/'+teem+'-shirt.png';\n    return (\n      <div className={'relative player'} onClick={this.applyGame}>\n        <div className={'number'}>{index}</div>\n        {isActive ?\n          <img alt={'active-shirt'} src={activeShirt}/>\n          : <img\n            alt={'grey-shirt'}\n            className={'t-shirt-grey'}\n            src='/img/grey-shirt.png' />}\n      </div>\n    );\n  }\n}\n\nexport default (withGameService)(\n    connect((state: any)=> {\n      return {\n        gameRedux: state.game,\n      };\n    }, null)(FieldPlayer)\n);\n","import FieldPlayer from './field-player';\nexport default FieldPlayer;\n","// @ts-nocheck\n/**\n * Football teem service\n */\nclass Teems {\n  players: any;\n  /**\n   * Get a random integer between `min` and `max`.\n   *\n   * @param {number} min - min number\n   * @param {number} max - max number\n   * @return {number} a random integer\n   */\n  randomInt = (min: number, max: number) =>\n    Math.floor(Math.random() * (max - min + 1) + min);\n  tacticOrders = {\n    2: [1, 1],\n    3: [1, 2],\n    4: [1, 2, 1],\n    5: [1, 3, 1],\n    6: [1, 3, 2],\n    7: [1, 3, 2, 1],\n    8: [1, 3, 3, 1],\n    9: [1, 3, 1, 3, 1],\n    10: [1, 3, 2, 3, 1],\n    11: [[1, 4, 4, 2], [1, 4, 3, 3]],\n  };\n  /**\n   * Init amount of players\n   * @param {number} players\n   */\n  constructor(players: any) {\n    if (isNaN(players) || players < 0) {\n      throw Error('Invalid parameter, should be number and > 0');\n    }\n    this.players = players\n  }\n  /**\n   * Calculate number of player for each teem\n   * @return {number[]}\n   */\n  splitOnTeems() {\n    if (this.players % 2) {\n      const oddPlayers = (this.players - 1) / 2;\n      return [oddPlayers + 1, oddPlayers];\n    } else {\n      const evenPlayers = this.players / 2;\n      return [evenPlayers, evenPlayers];\n    }\n  }\n\n  /**\n   * Form tactic orders\n   * @return {Array}\n   */\n  formGameOrder() {\n    const teems = this.splitOnTeems()\n    const orders = []\n    teems.forEach((it, index) => {\n      const order = Array.isArray(this.tacticOrders[it][0]) ?\n        this.tacticOrders[it][\n            this.randomInt(0, this.tacticOrders[it].length - 1)\n        ] : this.tacticOrders[it]\n      orders.push(order)\n    });\n    return orders\n  }\n}\n\nexport default Teems\n","import React, {Component} from 'react'\nimport './football-field.scss'\nimport FieldPlayer from '../field-player'\nimport Teems from '../../../services/teems'\nimport {connect} from 'react-redux'\n\ninterface Props {\n  auth: any,\n  game: any\n}\n/**\n * Football field in game ui\n */\nclass FootballField extends Component<Props> {\n  state = {\n    gameOrder: [],\n    players: 0,\n  };\n  /**\n   * @param {object} nextProps\n   * @param {object} prevState\n   * @return {{players: number}}\n   */\n  static getDerivedStateFromProps(nextProps: any, prevState: any) {\n    return ({\n      gameOrder: nextProps.game.players === prevState.players?\n        prevState.gameOrder:\n        new Teems(nextProps.game.players).formGameOrder(),\n      players: nextProps.game.players})\n  }\n\n  /**\n   * @return {JSX} html\n   */\n  render() {\n    const {auth} = this.props;\n    return (\n      <div className={\n        auth.isAuthenticated ?\n          ' football-field  active' : ' football-field  regular'}>\n        <div className='football-field-center'/>\n        <div className=\"left-top-corner\"/>\n        <div className=\"right-top-corner\"/>\n        <div className=\"left-bottom-corner\"/>\n        <div className=\"right-bottom-corner\"/>\n        {this.state.gameOrder.length > 0 && this.generateLines()}\n      </div>\n    );\n  }\n  /**\n   * Generate tactic lines on field, each line contains few players\n   */\n  generateLines() {\n    const lines = []\n    const {game} = this.props\n    let total = game.players\n    const teemsOnField = [[], []]\n    let row = []\n    let rowNum = 1\n    this.state.gameOrder.forEach((it: any, index) => {\n      it.forEach((it: any)=> {\n        row = [];\n        for (let i = 1; i <= it && total > 0; i++) {\n          row.push(\n              <FieldPlayer\n                teem={index === 0 ? 'yellow' : 'blue'}\n                key={i}\n                game={game}\n                index={total}\n                isActive={false}/>)\n          total--\n        }\n        teemsOnField[index].push(\n            // @ts-ignore\n            <div key={rowNum++} className={'tactic-line '}>{row}</div>\n        )\n      })\n    })\n    lines.push(<div\n      key={'north-side'}\n      className={`half-field north-side lines-${teemsOnField[0].length}`}>\n      {teemsOnField[0]}</div>)\n    lines.push(<div\n      key={'south-side'}\n      className={`half-field south-side lines-${teemsOnField[1].length}`}>\n      {teemsOnField[1]}</div>)\n    return lines\n  }\n}\n\nexport default connect((state: any) => {\n  return {\n    auth: state.auth,\n  }\n})(FootballField)\n","import FootballField from './football-field';\nexport default FootballField;\n","/* eslint-disable no-invalid-this */\nimport React, {Component} from 'react'\nimport {withGameService} from '../../hoc-helpers'\nimport {loadGame} from '../../ac/games'\nimport {connect} from 'react-redux'\nimport {library} from '@fortawesome/fontawesome-svg-core'\nimport {faFutbol} from '@fortawesome/free-solid-svg-icons'\nimport TeemsVsFlags from './teems-vs-flags'\nimport Chat from './chat'\nimport './game.scss'\nimport FootballField from './football-field'\nlibrary.add(faFutbol)\ninterface Props {\n  match: any,\n  loadGame: any,\n  game: any,\n  auth: any\n}\n/**\n * Game session\n */\nclass Game extends Component<Props> {\n  state = {\n    gameOrder: [],\n    players: 0,\n  };\n  /**\n   * Init\n   */\n  componentDidMount() {\n    document.title = 'Football for everyone';\n    const {\n      match: {params},\n      loadGame,\n    } = this.props;\n    const {id} = params;\n    loadGame(id);\n  }\n  /**\n   * @return {string} html\n   */\n  render() {\n    const {game, auth} = this.props;\n    const {\n      match: {params},\n    } = this.props;\n    const {id} = params;\n    return (\n      <div>\n        <div className=\"row game\">\n          <div className=\"col-md-6 left-col\">\n            <div>\n              <p>\n                Что бы присоединится\n                {auth.isAuthenticated || ', залогинтесь и'} нажмите на футболку\n              </p>\n            </div>\n            <div className=\"football-field-wrapper\">\n              <div>\n                <FootballField game={game}/>\n              </div>\n            </div>\n          </div>\n          <div className=\"col-md-6 right-col padding-0\">\n            <div className=\"row\">\n              <div className=\"col-md-6 game-info\">\n                <div>\n                  {game.city}\n                </div>\n                <div>\n                  {game.district + ', ' +game.address}\n                </div>\n                <div>\n                  игроков - {game.players}\n                </div>\n                {game.additional ? <div>доп инфо - {game.additional}</div>: ''}\n              </div>\n              <div className=\"col-md-6 padding-0\">\n                <TeemsVsFlags/>\n              </div>\n            </div>\n            <div className='row'>\n              <div className=\"col-md-12\">\n                <Chat gameId={id}/>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\nexport default connect(\n    (state: any) => {\n      return {\n        game: state.game,\n        auth: state.auth,\n      };\n    },\n    {loadGame}\n)(withGameService(Game));\n","import Game from './game';\nexport default Game;\n","import About from './about';\nexport default About;\n\n","import React, {Component} from 'react';\nimport './about.scss';\n/**\n * About page\n */\nclass About extends Component {\n\n  componentDidMount() {\n    About.setMeta();\n  }\n\n  /**\n   * @return {string} html\n   */\n  render() {\n    return (\n      <div>\n        <article>\n          Если ты не знаешь, где <strong>\n          найти людей для игры в футбол\n          </strong>\n          <span> - это сайт как раз для тебя!</span>\n        </article>\n        <article>\n           Тут ты можешь создать игру либо присоединится к уже существующей.\n        </article>\n        <hr/>\n        <div className={'guide padding-top-0'}>\n          <p>Как создать игру:</p>\n          <iframe title=\"Как создать игру\" width=\"100%\" height=\"500\"\n            src=\"https://www.youtube.com/embed/3qZnOWd4HMw\" frameBorder=\"0\"\n            allow=\"accelerometer; autoplay; encrypted-media;\n     gyroscope; picture-in-picture\"\n            allowFullScreen></iframe>\n        </div>\n        <div className={'guide'}>\n          <p>Как присоединится к игре:</p>\n          <iframe title=\"Как присоединится к игре\" width=\"100%\" height=\"500\"\n            src=\"https://www.youtube.com/embed/X0I9aNDMaH8\"\n            frameBorder=\"0\"\n            allow=\"accelerometer; autoplay; encrypted-media;\n             gyroscope; picture-in-picture\"\n            allowFullScreen></iframe>\n        </div>\n      </div>\n    );\n  }\n\n  static setMeta() {\n    document.title = 'About';\n  }\n}\n\nexport default About;\n","/* eslint-disable no-invalid-this */\nimport React, {Component} from 'react'\nimport './registration.scss'\nimport ErrorMessage from '../../../components/common/messages/error-message'\nimport Validator from 'validator'\n\nimport _ from 'lodash'\nimport {registration} from '../../../ac/auth'\nimport {connect} from 'react-redux'\n\ninterface Props {\n  registration: any,\n  history: any\n}\n\n/**\n * Registration page\n */\nclass Registration extends Component<Props> {\n\n  state = {\n    data: {\n      email: '',\n      password: '',\n      name: '',\n      repeatPassword: '',\n    },\n    loading: false,\n    errors: {email: null, repeatPassword: null, password: null, name: null},\n    backendErrors: [],\n  }\n\n  /**\n   * Handle all simple text inputs\n   * @param {object} e\n   * @return {void}\n   */\n  onChange = (e: any) => {\n    this.setState({\n      data: {...this.state.data, [e.target.name]: e.target.value},\n    })\n  };\n\n  /**\n   * Form validation\n   * @return {object}\n   */\n  validate = (data: any) => {\n    const errors : {\n      password: string | null,\n      email: string | null,\n      name: string | null,\n      repeatPassword: string | null\n    } = {password: null, email: null, name: null, repeatPassword: null}\n    if (!data.password) errors.password = `Не может быть пустым`\n    if (!data.email) errors.email = `Не может быть пустым`\n    if (!data.name) errors.name = `Не может быть пустым`\n    if (!data.password !== !data.repeatPassword) {\n      errors.repeatPassword = `Пароли не совпадают`\n    }\n    if (!Validator.isEmail(data.email)) errors.email = `Не валидный емейл`\n    return errors\n  };\n  /**\n   * Submit form\n   * @param {object} e\n   */\n  onSubmit = async (e: any) => {\n    const {data} = this.state\n    e.preventDefault()\n    const errors = this.validate(data)\n    this.setState({errors})\n    if (_.isEmpty(errors)) {\n      const registrationData = _.pick(data, ['name', 'password', 'email'])\n      const {registration} = this.props\n      try {\n        await registration(registrationData)\n        this.props.history.push(`/complete-registration`)\n      } catch (err) {\n        switch (err.status) {\n          case 409:\n            this.setState({backendErrors: ['Такой пользователь уже существует']}\n            )\n            break\n          default:\n            this.setState({backendErrors: err.data.errors})\n        }\n      }\n    }\n  };\n  /**\n   * @return {JSX} html\n   */\n  render() {\n    const {data} = this.state;\n    return (\n      <form className=\"\n      col-12\n      col-md-12\n      col-sm-12\n      col-lg-6\n      col-xl-6\n      login-form\" onSubmit={this.onSubmit}>\n        {\n          this.state.backendErrors ? this.state.backendErrors.map(\n              (it) => <ErrorMessage key={it} message={it}/>) : null\n        }\n        <div className=\"form-group\">\n          <label>Ник</label>\n          <input\n            type=\"name\"\n            id=\"name\"\n            name=\"name\"\n            value={data.name}\n            placeholder=\"Будет отображатся в интерфейсе\"\n            onChange={this.onChange}\n            className=\"form-control\"\n          />\n          {this.state.errors.name && (\n            <ErrorMessage message={this.state.errors.name} />\n          )}\n        </div>\n        <div className=\"form-group\">\n          <label htmlFor=\"exampleInputEmail1\">E-mail адрес</label>\n          <input\n            type=\"email\"\n            id=\"email\"\n            name=\"email\"\n            placeholder=\"example@gmail.com\"\n            value={data.email}\n            onChange={this.onChange}\n            className=\"form-control\"\n          />\n          {this.state.errors.email && (\n            <ErrorMessage message={this.state.errors.email} />\n          )}\n        </div>\n\n        <div className=\"form-group\">\n          <label>Пароль</label>\n          <input\n            type=\"password\"\n            id=\"password\"\n            name=\"password\"\n            value={data.password}\n            onChange={this.onChange}\n            className=\"form-control\"\n            placeholder=\"Пароль\"\n          />\n          {this.state.errors.password && (\n            <ErrorMessage message={this.state.errors.password} />\n          )}\n        </div>\n        <div className=\"form-group\">\n          <input\n            type=\"password\"\n            id=\"repeatPassword\"\n            name=\"repeatPassword\"\n            value={data.repeatPassword}\n            onChange={this.onChange}\n            className=\"form-control\"\n            placeholder=\"Повторите пароль\"\n          />\n          {this.state.errors.repeatPassword && (\n            <ErrorMessage message={this.state.errors.repeatPassword} />\n          )}\n        </div>\n        <div className=\"form-group\">\n          <button type=\"submit\" className=\"btn submit-btn mb-2\">\n            Зарегистрировтся\n          </button>\n        </div>\n      </form>\n    )\n  }\n}\n\nexport default connect(null, {registration})(Registration)\n","import Registration from './registration';\nexport default Registration;\n","import CompleteRegistration from './complete-registration';\nexport default CompleteRegistration;\n","import React, {Component} from 'react';\n\n/**\n * Verify your email\n */\nexport default class CompleteRegistration extends Component {\n  /**\n   * @return {JSX}\n   */\n  render() {\n    return (\n      <div>\n        На вашу почту было отправлено письмо,\n        чтобы закончить регистрацию перейдите по ссылке\n      </div>\n    );\n  }\n}\n","import React, {Component} from 'react'\nimport Header from './components/header'\nimport GameForm from './components/game-form'\nimport Login from './components/auth/login'\nimport 'bootstrap/dist/css/bootstrap.min.css'\nimport {Route} from 'react-router-dom'\nimport 'app.scss'\nimport Game from './components/game'\nimport About from './components/about'\nimport Registration from './components/auth/registration'\nimport {connect} from 'react-redux'\nimport {withRouter} from 'react-router-dom'\nimport CompleteRegistration from './components/auth/complete-registration'\n\ninterface Props {\n  location: any\n}\n\n/**\n * Root of application\n */\nclass App extends Component<Props> {\n  render() {\n    const {location} = this.props\n    return (\n      <div className={location.id && 'city-picked'}>\n        <Header/>\n        <div className=\"container main-content\">\n          <Route path=\"/about\" exact component={About}/>\n          <Route path=\"/login\" exact component={Login}/>\n          <Route path=\"/game/:id\" exact component={Game}/>\n          <Route path=\"/registration\" exact component={Registration}/>\n          <Route path=\"/complete-registration\" exact\n            component={CompleteRegistration}/>\n          <Route path=\"/\" exact component={GameForm} />\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default withRouter((connect)((state: {location: any}) => {\n  return {\n    location: state.location,\n  }\n}, null)(App))\n\n","import {SET_CURRENT_USER} from '../constants'\nimport _ from 'lodash'\nimport * as jwt from 'jsonwebtoken'\nimport setAuthorizationToken from '../utils/setAuthorizationToken'\n\nconst initialState = {\n  user: pickUser(jwt.decode(localStorage.jwt)),\n  isAuthenticated: !_.isEmpty(localStorage.jwt),\n};\n\nif (localStorage.jwt) {\n  setAuthorizationToken(localStorage.jwt)\n}\n\nexport default (state = initialState, action: any) => {\n  switch (action.type) {\n    case SET_CURRENT_USER:\n      const {user} = action\n      return {\n        user: pickUser(user), isAuthenticated: !_.isEmpty(user)}\n    default:\n      return state\n  }\n};\n\n/**\n * Pick needed fields from user\n */\nfunction pickUser(user: any) {\n  return _.pick(user, ['email', 'id', 'name']);\n}\n","// @ts-nocheck\nimport {SET_CITY} from '../constants'\nimport {Record} from 'immutable'\n\nconst initialState = new Record({\n  name: '',\n  country: '',\n  id: null,\n})();\n\nexport default (state = initialState, action) => {\n  switch (action.type) {\n    case SET_CITY:\n      return action.payload ? state.merge(action.payload) : initialState\n    default:\n      return state\n  }\n};\n","import {OrderedMap, Map} from 'immutable';\n\n/**\n * @param {Array} arr\n * @param {function} DataRecord\n * @return {*}\n */\nexport function arrToMap(arr: any, DataRecord = Map) {\n  return arr.reduce(\n      // @ts-ignore\n      (acc: any, item: any) => acc.set(item.id, new DataRecord(item)),\n      // @ts-ignore\n      new OrderedMap({})\n  );\n}\n\n/**\n * @param {object} obj\n * @return {Array<T>}\n */\nexport function mapToArr(obj: any) {\n  return obj.valueSeq().toArray()\n}\n","/* eslint camelcase: 0 */\n// @ts-nocheck\nimport {\n  LOAD_GAMES,\n  SUCCESS,\n  GAME_ADDED,\n  START,\n  PLAYER_JOINED,\n} from '../constants';\nimport {OrderedMap, Record} from 'immutable';\nimport {arrToMap} from '../helpers/helpers';\n\nconst ReducerState = Record({\n  loading: false,\n  entities: new OrderedMap({}),\n});\n\nconst GameRecord = Record({\n  id: 0,\n  city: '',\n  city_id: 0,\n  address: '',\n  date: '',\n  district: null,\n  additional: '',\n  players: 0,\n  activePlayers: 1,\n});\n\nconst defaultState = new ReducerState();\n\nexport default (gameState = defaultState, action) => {\n  const {type, payload} = action;\n  switch (type) {\n    case LOAD_GAMES + SUCCESS:\n      if (!payload.data) {\n        return defaultState;\n      }\n      return gameState.update('entities', (entities) => {\n        return arrToMap(payload.data, GameRecord).sortBy(\n            (f) => f.get('date')\n        );\n      });\n    case GAME_ADDED + START:\n      return gameState.set('loading', true);\n    case PLAYER_JOINED:\n      console.log('player join in list', payload);\n      const {gameId, activePlayers} = payload;\n      return gameState.updateIn(['entities', gameId], (gameRecord) => {\n        try {\n          return gameRecord.set('activePlayers', activePlayers);\n        } catch (e) {\n          console.log('not connected to list yet');\n        }\n      });\n    case GAME_ADDED + SUCCESS:\n      const {id, city_id} = payload.data;\n      if (city_id !== payload.store.location.id) {\n        return gameState;\n      }\n      return gameState\n          .setIn(['entities', id], new GameRecord(payload.data))\n          .set('loading', false)\n          .update('entities', (entities) => {\n            return entities.sortBy((f) => f.get('date'));\n          });\n    default:\n      return gameState;\n  }\n};\n","import {Record} from 'immutable';\nimport {LOAD_GAME, SUCCESS, START, PLAYER_JOINED} from '../constants';\n\nconst GameRecord = Record({\n  id: null,\n  city: null,\n  address: null,\n  lat: null,\n  district: null,\n  long: null,\n  players: 0,\n  city_id: 0,\n  active_players: 1,\n  date: null,\n  additional: null,\n  loading: false,\n  fieldNumbersInGame: [],\n});\n\nconst defaultState = new GameRecord();\n\nexport default (gameState = defaultState, action: any) => {\n  const {type, payload} = action;\n  switch (type) {\n    case LOAD_GAME + START:\n      return gameState.set('loading', true)\n    case LOAD_GAME + SUCCESS:\n      return gameState.merge(payload.data).set('loading', false)\n    case PLAYER_JOINED:\n      const {gameId, activePlayers, info} = payload\n      if (gameState.get('id') === gameId) {\n        if (info.event === 'joined') {\n          return joinGame(gameState, info)\n        }\n        if (info.event === 'leaved') {\n          return leaveGame(gameState, info)\n        }\n        return gameState\n            .set('active_players', activePlayers)\n            .set('fieldNumbersInGame', info.fieldNumbersInGame)\n      }\n      return gameState;\n    default:\n      return gameState;\n  }\n};\n\n/**\n * @param {object} gameState\n * @param {number} playerFieldNumber\n * @return {object}\n */\nfunction leaveGame(gameState: any, {fieldNumbersInGame}: any) {\n  return gameState.set('fieldNumbersInGame', fieldNumbersInGame);\n}\n/**\n * @param {object} gameState\n * @param {number} playerFieldNumber\n * @return {*}\n */\nfunction joinGame(gameState: any, {fieldNumbersInGame}: any) {\n  return gameState.set('fieldNumbersInGame', fieldNumbersInGame)\n}\n","// @ts-nocheck\nimport {OrderedMap, Record} from 'immutable';\nimport {GAME_CHAT_MESSAGE_ADDED, GAME_CHAT_MESSAGE_HISTORY} from '../constants';\nimport {arrToMap} from '../helpers/helpers';\n\nconst ReducerState = Record({\n  loading: false,\n  entities: new OrderedMap({}),\n});\n\nconst MessageRecord = Record({\n  id: null,\n  text: null,\n  username: null,\n  date: null,\n});\n\nconst defaultState = new ReducerState();\n\nexport default (gameChatState = defaultState, action) => {\n  const {type, payload} = action;\n  switch (type) {\n    case GAME_CHAT_MESSAGE_HISTORY:\n      return gameChatState.update('entities', (entities) => {\n        return arrToMap(payload, MessageRecord);\n      });\n    case GAME_CHAT_MESSAGE_ADDED:\n      const messages = gameChatState.setIn(\n          ['entities', payload.id],\n          new MessageRecord(payload));\n      return messages.update('entities', (entities)=> {\n        return messages.entities.sortBy((it)=>it.get('date')).reverse();\n      });\n    default:\n      return gameChatState;\n  }\n};\n\n","import {combineReducers} from 'redux';\nimport auth from './auth';\nimport location from './location';\nimport games from './games';\nimport game from './game';\nimport gameChat from './game-chat';\nexport default combineReducers({\n  auth, location, games, game, gameChat,\n});\n","import {createStore, applyMiddleware} from 'redux';\nimport thunk from 'redux-thunk';\nimport reducer from '../reducer';\nimport {composeWithDevTools} from 'redux-devtools-extension';\nimport api from '../middlewares/api';\n\nconst store = createStore(\n    reducer,\n    composeWithDevTools(applyMiddleware(thunk, api))\n);\nexport default store;\n","import {START, SUCCESS, FAIL} from '../constants'\nimport axios from 'axios'\n\nexport default (store: any) => (next: any) => (action: any) => {\n  const {callApi, type, ...rest} = action\n  if (!callApi) return next(action)\n\n  next({\n    ...rest,\n    type: type + START,\n  });\n  return axios.get(callApi).then(\n      (response) => {\n        next({...rest, type: type + SUCCESS, payload:\n            {...response, store: store.getState()}})\n      },\n      (error) => {\n        next({...rest, type: type + FAIL, error})\n      }\n  );\n};\n","import axios from 'axios'\n\n/**\n * Service for working with cities\n */\nclass CityService {\n  /**\n   * Grab list of cities where city like function agr\n   * @param {string} city name of city or part of it\n   * @return {Promise<Response>}\n   */\n  getCities(city: any) {\n    if (city) {\n      return axios.get(`/cities/getByName/${city}`).then((res) => res.data)\n    }\n    return new Promise((resolve) => {\n      resolve([])\n    })\n  }\n}\n\nexport default CityService\n","// @ts-nocheck\nimport axios from 'axios';\nimport io from 'socket.io-client';\nconst patch = require('socketio-wildcard')(io.Manager);\n\n/**\n * Area of responsibility creating and handling game events\n */\nclass GameService {\n  /**\n   * Game char socket\n   * @type {null}\n   * @private\n   */\n  _gameSocket = null;\n  /**\n   * Add game event\n   * @param {object} game\n   */\n  async add(game: any) {\n    game.date = game.date.format().split('+')[0]+'+0000'\n    return await axios.post(`/game`, game)\n  }\n\n  /**\n   * Init chat for game\n   */\n  initChat(id: number) {\n    console.log('init chat')\n    return new Promise((resolve) => {\n      this._gameSocket = io({\n        path: '/chat/game',\n      });\n      patch(this._gameSocket);\n      this._gameSocket.on('connect', () => {\n        console.log('game soket c')\n        this._gameSocket.emit(\n            'join',\n            'game' + id,\n            resolve(this._gameSocket)\n        );\n      });\n    });\n  }\n\n  addChatMessage(message: any) {\n    return axios.post(`/game/chat`, message)\n  }\n\n  async getChatHistory(gameId: number) {\n    return await axios.get(`/game/chat/history/${gameId}`)\n  }\n\n  joinGame(gameId: number, playerNumber: number) {\n    return axios.post(`/game/join`, {gameId, playerNumber})\n  }\n}\nexport default GameService\n","import io from 'socket.io-client'\nimport store from './store'\nimport {GAME_ADDED, PLAYER_JOINED} from './constants'\nimport {gameAdded, playerJoined} from './ac/games'\nconst patch = require('socketio-wildcard')(io.Manager)\nconst gameSocket =\n  io({path: '/chat/game'})\nconst generalSocket =\n  io({path: '/chat/general'})\npatch(generalSocket)\npatch(gameSocket)\n\n/**\n * Common sockets func\n */\nfunction sockets() {\n  generalSocket.on('*', function(message: any) {\n    switch (message.data[0]) {\n      case GAME_ADDED:\n        console.log('game added');\n        store.dispatch(gameAdded(message.data[1]));\n        break;\n      case PLAYER_JOINED:\n        console.log('pl joined');\n        const {gameId, players, info} = message.data[1];\n        store.dispatch(playerJoined(gameId, players, info));\n        break;\n      default:\n        console.log('unknown action');\n        break;\n    }\n  });\n}\nexport {sockets, gameSocket, generalSocket};\n","// @ts-nocheck\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport {BrowserRouter} from 'react-router-dom';\nimport {Provider} from 'react-redux';\nimport App from './App';\nimport store from './store';\nimport CityService from './services/city';\nimport {CityServiceProvider} from './context/city-service-context';\nimport {GameServiceProvider} from './context/game-service-context';\nimport GameService from './services/game';\nimport {sockets} from './sockets';\nsockets();\nReactDOM.render(\n    <BrowserRouter>\n      <Provider store={store}>\n        {/* eslint-disable */}\n        <CityServiceProvider value={new CityService()}>\n        <GameServiceProvider value={new GameService()}>\n          <App />\n        </GameServiceProvider>\n        </CityServiceProvider>\n        {/* eslint-enable */}\n      </Provider>\n    </BrowserRouter>,\n    document.getElementById('root')\n);\n"],"sourceRoot":""}